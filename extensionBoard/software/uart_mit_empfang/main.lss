
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001574  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000042  00800060  00001574  00001608  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000024f  008000a2  008000a2  0000164a  2**0
                  ALLOC
  3 .stab         000058f8  00000000  00000000  0000164c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001a1d  00000000  00000000  00006f44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
       2:	a9 c0       	rjmp	.+338    	; 0x156 <__bad_interrupt>
       4:	a8 c0       	rjmp	.+336    	; 0x156 <__bad_interrupt>
       6:	a7 c0       	rjmp	.+334    	; 0x156 <__bad_interrupt>
       8:	a6 c0       	rjmp	.+332    	; 0x156 <__bad_interrupt>
       a:	a5 c0       	rjmp	.+330    	; 0x156 <__bad_interrupt>
       c:	a4 c0       	rjmp	.+328    	; 0x156 <__bad_interrupt>
       e:	a3 c0       	rjmp	.+326    	; 0x156 <__bad_interrupt>
      10:	a2 c0       	rjmp	.+324    	; 0x156 <__bad_interrupt>
      12:	a1 c0       	rjmp	.+322    	; 0x156 <__bad_interrupt>
      14:	a0 c0       	rjmp	.+320    	; 0x156 <__bad_interrupt>
      16:	64 c2       	rjmp	.+1224   	; 0x4e0 <__vector_11>
      18:	93 c2       	rjmp	.+1318   	; 0x540 <__vector_12>
      1a:	9d c0       	rjmp	.+314    	; 0x156 <__bad_interrupt>
      1c:	9c c0       	rjmp	.+312    	; 0x156 <__bad_interrupt>
      1e:	9b c0       	rjmp	.+310    	; 0x156 <__bad_interrupt>
      20:	9a c0       	rjmp	.+308    	; 0x156 <__bad_interrupt>
      22:	99 c0       	rjmp	.+306    	; 0x156 <__bad_interrupt>
      24:	98 c0       	rjmp	.+304    	; 0x156 <__bad_interrupt>
      26:	00 40       	sbci	r16, 0x00	; 0
      28:	7a 10       	cpse	r7, r10
      2a:	f3 5a       	subi	r31, 0xA3	; 163
      2c:	00 a0       	ldd	r0, Z+32	; 0x20
      2e:	72 4e       	sbci	r23, 0xE2	; 226
      30:	18 09       	sbc	r17, r8
      32:	00 10       	cpse	r0, r0
      34:	a5 d4       	rcall	.+2378   	; 0x980 <__floatsisf+0xa>
      36:	e8 00       	.word	0x00e8	; ????
      38:	00 e8       	ldi	r16, 0x80	; 128
      3a:	76 48       	sbci	r23, 0x86	; 134
      3c:	17 00       	.word	0x0017	; ????
      3e:	00 e4       	ldi	r16, 0x40	; 64
      40:	0b 54       	subi	r16, 0x4B	; 75
      42:	02 00       	.word	0x0002	; ????
      44:	00 ca       	rjmp	.-3072   	; 0xfffff446 <__eeprom_end+0xff7ef446>
      46:	9a 3b       	cpi	r25, 0xBA	; 186
      48:	00 00       	nop
      4a:	00 e1       	ldi	r16, 0x10	; 16
      4c:	f5 05       	cpc	r31, r5
      4e:	00 00       	nop
      50:	80 96       	adiw	r24, 0x20	; 32
      52:	98 00       	.word	0x0098	; ????
      54:	00 00       	nop
      56:	40 42       	sbci	r20, 0x20	; 32
      58:	0f 00       	.word	0x000f	; ????
      5a:	00 00       	nop
      5c:	a0 86       	std	Z+8, r10	; 0x08
      5e:	01 00       	.word	0x0001	; ????
      60:	00 00       	nop
      62:	10 27       	eor	r17, r16
      64:	00 00       	nop
      66:	00 00       	nop
      68:	e8 03       	fmulsu	r22, r16
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	64 00       	.word	0x0064	; ????
      70:	00 00       	nop
      72:	00 00       	nop
      74:	0a 00       	.word	0x000a	; ????
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	01 00       	.word	0x0001	; ????
      7c:	00 00       	nop
      7e:	00 00       	nop
      80:	2c 76       	andi	r18, 0x6C	; 108
      82:	d8 88       	ldd	r13, Y+16	; 0x10
      84:	dc 67       	ori	r29, 0x7C	; 124
      86:	4f 08       	sbc	r4, r15
      88:	23 df       	rcall	.-442    	; 0xfffffed0 <__eeprom_end+0xff7efed0>
      8a:	c1 df       	rcall	.-126    	; 0xe <__zero_reg__+0xd>
      8c:	ae 59       	subi	r26, 0x9E	; 158
      8e:	e1 b1       	in	r30, 0x01	; 1
      90:	b7 96       	adiw	r30, 0x27	; 39
      92:	e5 e3       	ldi	r30, 0x35	; 53
      94:	e4 53       	subi	r30, 0x34	; 52
      96:	c6 3a       	cpi	r28, 0xA6	; 166
      98:	e6 51       	subi	r30, 0x16	; 22
      9a:	99 76       	andi	r25, 0x69	; 105
      9c:	96 e8       	ldi	r25, 0x86	; 134
      9e:	e6 c2       	rjmp	.+1484   	; 0x66c <main+0x72>
      a0:	84 26       	eor	r8, r20
      a2:	eb 89       	ldd	r30, Y+19	; 0x13
      a4:	8c 9b       	sbis	0x11, 4	; 17
      a6:	62 ed       	ldi	r22, 0xD2	; 210
      a8:	40 7c       	andi	r20, 0xC0	; 192
      aa:	6f fc       	.word	0xfc6f	; ????
      ac:	ef bc       	out	0x2f, r14	; 47
      ae:	9c 9f       	mul	r25, r28
      b0:	40 f2       	brcs	.-112    	; 0x42 <__SREG__+0x3>
      b2:	ba a5       	ldd	r27, Y+42	; 0x2a
      b4:	6f a5       	ldd	r22, Y+47	; 0x2f
      b6:	f4 90       	lpm	r15, Z+
      b8:	05 5a       	subi	r16, 0xA5	; 165
      ba:	2a f7       	brpl	.-54     	; 0x86 <__SREG__+0x47>
      bc:	5c 93       	st	X, r21
      be:	6b 6c       	ori	r22, 0xCB	; 203
      c0:	f9 67       	ori	r31, 0x79	; 121
      c2:	6d c1       	rjmp	.+730    	; 0x39e <getCodeWordA+0x18>
      c4:	1b fc       	.word	0xfc1b	; ????
      c6:	e0 e4       	ldi	r30, 0x40	; 64
      c8:	0d 47       	sbci	r16, 0x7D	; 125
      ca:	fe f5       	brtc	.+126    	; 0x14a <.do_clear_bss_loop>
      cc:	20 e6       	ldi	r18, 0x60	; 96
      ce:	b5 00       	.word	0x00b5	; ????
      d0:	d0 ed       	ldi	r29, 0xD0	; 208
      d2:	90 2e       	mov	r9, r16
      d4:	03 00       	.word	0x0003	; ????
      d6:	94 35       	cpi	r25, 0x54	; 84
      d8:	77 05       	cpc	r23, r7
      da:	00 80       	ld	r0, Z
      dc:	84 1e       	adc	r8, r20
      de:	08 00       	.word	0x0008	; ????
      e0:	00 20       	and	r0, r0
      e2:	4e 0a       	sbc	r4, r30
      e4:	00 00       	nop
      e6:	00 c8       	rjmp	.-4096   	; 0xfffff0e8 <__eeprom_end+0xff7ef0e8>
      e8:	0c 33       	cpi	r16, 0x3C	; 60
      ea:	33 33       	cpi	r19, 0x33	; 51
      ec:	33 0f       	add	r19, r19
      ee:	98 6e       	ori	r25, 0xE8	; 232
      f0:	12 83       	std	Z+2, r17	; 0x02
      f2:	11 41       	sbci	r17, 0x11	; 17
      f4:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f6:	21 14       	cp	r2, r1
      f8:	89 3b       	cpi	r24, 0xB9	; 185
      fa:	e6 55       	subi	r30, 0x56	; 86
      fc:	16 cf       	rjmp	.-468    	; 0xffffff2a <__eeprom_end+0xff7eff2a>
      fe:	fe e6       	ldi	r31, 0x6E	; 110
     100:	db 18       	sub	r13, r11
     102:	d1 84       	ldd	r13, Z+9	; 0x09
     104:	4b 38       	cpi	r20, 0x8B	; 139
     106:	1b f7       	brvc	.-58     	; 0xce <__SREG__+0x8f>
     108:	7c 1d       	adc	r23, r12
     10a:	90 1d       	adc	r25, r0
     10c:	a4 bb       	out	0x14, r26	; 20
     10e:	e4 24       	eor	r14, r4
     110:	20 32       	cpi	r18, 0x20	; 32
     112:	84 72       	andi	r24, 0x24	; 36
     114:	5e 22       	and	r5, r30
     116:	81 00       	.word	0x0081	; ????
     118:	c9 f1       	breq	.+114    	; 0x18c <adc2res+0x34>
     11a:	24 ec       	ldi	r18, 0xC4	; 196
     11c:	a1 e5       	ldi	r26, 0x51	; 81
     11e:	3d 27       	eor	r19, r29

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf e5       	ldi	r28, 0x5F	; 95
     126:	d4 e0       	ldi	r29, 0x04	; 4
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	10 e0       	ldi	r17, 0x00	; 0
     12e:	a0 e6       	ldi	r26, 0x60	; 96
     130:	b0 e0       	ldi	r27, 0x00	; 0
     132:	e4 e7       	ldi	r30, 0x74	; 116
     134:	f5 e1       	ldi	r31, 0x15	; 21
     136:	02 c0       	rjmp	.+4      	; 0x13c <.do_copy_data_start>

00000138 <.do_copy_data_loop>:
     138:	05 90       	lpm	r0, Z+
     13a:	0d 92       	st	X+, r0

0000013c <.do_copy_data_start>:
     13c:	a2 3a       	cpi	r26, 0xA2	; 162
     13e:	b1 07       	cpc	r27, r17
     140:	d9 f7       	brne	.-10     	; 0x138 <.do_copy_data_loop>

00000142 <__do_clear_bss>:
     142:	12 e0       	ldi	r17, 0x02	; 2
     144:	a2 ea       	ldi	r26, 0xA2	; 162
     146:	b0 e0       	ldi	r27, 0x00	; 0
     148:	01 c0       	rjmp	.+2      	; 0x14c <.do_clear_bss_start>

0000014a <.do_clear_bss_loop>:
     14a:	1d 92       	st	X+, r1

0000014c <.do_clear_bss_start>:
     14c:	a1 3f       	cpi	r26, 0xF1	; 241
     14e:	b1 07       	cpc	r27, r17
     150:	e1 f7       	brne	.-8      	; 0x14a <.do_clear_bss_loop>
     152:	53 d2       	rcall	.+1190   	; 0x5fa <main>
     154:	0d ca       	rjmp	.-3046   	; 0xfffff570 <__eeprom_end+0xff7ef570>

00000156 <__bad_interrupt>:
     156:	54 cf       	rjmp	.-344    	; 0x0 <__vectors>

00000158 <adc2res>:
	message[2] = '\n';
	message[3] = '\r';
	put_string(message);
}

int adc2res(int adcValue){
     158:	ef 92       	push	r14
     15a:	ff 92       	push	r15
     15c:	0f 93       	push	r16
     15e:	1f 93       	push	r17
	int resistance;
	double adcVoltage = adcValue * 2.56f / 1023.0f;
     160:	aa 27       	eor	r26, r26
     162:	97 fd       	sbrc	r25, 7
     164:	a0 95       	com	r26
     166:	ba 2f       	mov	r27, r26
     168:	bc 01       	movw	r22, r24
     16a:	cd 01       	movw	r24, r26
     16c:	04 d4       	rcall	.+2056   	; 0x976 <__floatsisf>
     16e:	2a e0       	ldi	r18, 0x0A	; 10
     170:	37 ed       	ldi	r19, 0xD7	; 215
     172:	43 e2       	ldi	r20, 0x23	; 35
     174:	50 e4       	ldi	r21, 0x40	; 64
     176:	8b d4       	rcall	.+2326   	; 0xa8e <__mulsf3>
     178:	20 e0       	ldi	r18, 0x00	; 0
     17a:	30 ec       	ldi	r19, 0xC0	; 192
     17c:	4f e7       	ldi	r20, 0x7F	; 127
     17e:	54 e4       	ldi	r21, 0x44	; 68
     180:	5f d3       	rcall	.+1726   	; 0x840 <__divsf3>
     182:	7b 01       	movw	r14, r22
     184:	8c 01       	movw	r16, r24
     186:	63 e3       	ldi	r22, 0x33	; 51
     188:	73 e3       	ldi	r23, 0x33	; 51
     18a:	83 e5       	ldi	r24, 0x53	; 83
     18c:	90 e4       	ldi	r25, 0x40	; 64
     18e:	a8 01       	movw	r20, r16
     190:	97 01       	movw	r18, r14
     192:	f1 d2       	rcall	.+1506   	; 0x776 <__subsf3>
     194:	9b 01       	movw	r18, r22
     196:	ac 01       	movw	r20, r24
     198:	c8 01       	movw	r24, r16
     19a:	b7 01       	movw	r22, r14
     19c:	51 d3       	rcall	.+1698   	; 0x840 <__divsf3>
     19e:	20 e0       	ldi	r18, 0x00	; 0
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	4a e7       	ldi	r20, 0x7A	; 122
     1a4:	54 e4       	ldi	r21, 0x44	; 68
     1a6:	73 d4       	rcall	.+2278   	; 0xa8e <__mulsf3>
     1a8:	b3 d3       	rcall	.+1894   	; 0x910 <__fixsfsi>
	resistance = R_PC0 * (adcVoltage / (3.3f - adcVoltage));
	return resistance;
}
     1aa:	cb 01       	movw	r24, r22
     1ac:	1f 91       	pop	r17
     1ae:	0f 91       	pop	r16
     1b0:	ff 90       	pop	r15
     1b2:	ef 90       	pop	r14
     1b4:	08 95       	ret

000001b6 <res2temp>:


double res2temp(int res){
     1b6:	aa 27       	eor	r26, r26
     1b8:	97 fd       	sbrc	r25, 7
     1ba:	a0 95       	com	r26
     1bc:	ba 2f       	mov	r27, r26
     1be:	bc 01       	movw	r22, r24
     1c0:	cd 01       	movw	r24, r26
     1c2:	d9 d3       	rcall	.+1970   	; 0x976 <__floatsisf>
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	30 ec       	ldi	r19, 0xC0	; 192
     1c8:	4b e4       	ldi	r20, 0x4B	; 75
     1ca:	54 e4       	ldi	r21, 0x44	; 68
     1cc:	d4 d2       	rcall	.+1448   	; 0x776 <__subsf3>
     1ce:	20 e0       	ldi	r18, 0x00	; 0
     1d0:	30 e0       	ldi	r19, 0x00	; 0
     1d2:	40 ef       	ldi	r20, 0xF0	; 240
     1d4:	50 e4       	ldi	r21, 0x40	; 64
     1d6:	34 d3       	rcall	.+1640   	; 0x840 <__divsf3>
	return (res - 815.0f) / 7.5f;
}
     1d8:	08 95       	ret

000001da <dec2binWzerofill>:

char* dec2binWzerofill(unsigned long Dec, unsigned int bitLength){
     1da:	0f 93       	push	r16
     1dc:	1f 93       	push	r17
     1de:	cf 93       	push	r28
     1e0:	df 93       	push	r29
     1e2:	8b 01       	movw	r16, r22
     1e4:	9c 01       	movw	r18, r24
     1e6:	ea 01       	movw	r28, r20
     1e8:	e1 ed       	ldi	r30, 0xD1	; 209
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	40 e0       	ldi	r20, 0x00	; 0
     1ee:	50 e0       	ldi	r21, 0x00	; 0
     1f0:	0f c0       	rjmp	.+30     	; 0x210 <dec2binWzerofill+0x36>
  static char bin[64];
  unsigned int i=0;

  while (Dec > 0) {
    bin[32+i++] = ((Dec & 1) > 0) ? '1' : '0';
     1f2:	c8 01       	movw	r24, r16
     1f4:	81 70       	andi	r24, 0x01	; 1
     1f6:	90 70       	andi	r25, 0x00	; 0
     1f8:	89 2b       	or	r24, r25
     1fa:	11 f4       	brne	.+4      	; 0x200 <dec2binWzerofill+0x26>
     1fc:	80 e3       	ldi	r24, 0x30	; 48
     1fe:	01 c0       	rjmp	.+2      	; 0x202 <dec2binWzerofill+0x28>
     200:	81 e3       	ldi	r24, 0x31	; 49
     202:	81 93       	st	Z+, r24
     204:	4f 5f       	subi	r20, 0xFF	; 255
     206:	5f 4f       	sbci	r21, 0xFF	; 255
    Dec = Dec >> 1;
     208:	36 95       	lsr	r19
     20a:	27 95       	ror	r18
     20c:	17 95       	ror	r17
     20e:	07 95       	ror	r16

char* dec2binWzerofill(unsigned long Dec, unsigned int bitLength){
  static char bin[64];
  unsigned int i=0;

  while (Dec > 0) {
     210:	01 15       	cp	r16, r1
     212:	11 05       	cpc	r17, r1
     214:	21 05       	cpc	r18, r1
     216:	31 05       	cpc	r19, r1
     218:	61 f7       	brne	.-40     	; 0x1f2 <dec2binWzerofill+0x18>

double res2temp(int res){
	return (res - 815.0f) / 7.5f;
}

char* dec2binWzerofill(unsigned long Dec, unsigned int bitLength){
     21a:	ce 01       	movw	r24, r28
     21c:	84 1b       	sub	r24, r20
     21e:	95 0b       	sbc	r25, r21
     220:	ac 01       	movw	r20, r24
     222:	de 01       	movw	r26, r28
     224:	a0 53       	subi	r26, 0x30	; 48
     226:	bf 4f       	sbci	r27, 0xFF	; 255
     228:	e1 eb       	ldi	r30, 0xB1	; 177
     22a:	f0 e0       	ldi	r31, 0x00	; 0
     22c:	20 e0       	ldi	r18, 0x00	; 0
     22e:	30 e0       	ldi	r19, 0x00	; 0

  for (unsigned int j = 0; j< bitLength; j++) {
    if (j >= bitLength - i) {
      bin[j] = bin[ 31 + i - (j - (bitLength - i)) ];
    }else {
      bin[j] = '0';
     230:	90 e3       	ldi	r25, 0x30	; 48
     232:	0b c0       	rjmp	.+22     	; 0x24a <dec2binWzerofill+0x70>
    bin[32+i++] = ((Dec & 1) > 0) ? '1' : '0';
    Dec = Dec >> 1;
  }

  for (unsigned int j = 0; j< bitLength; j++) {
    if (j >= bitLength - i) {
     234:	24 17       	cp	r18, r20
     236:	35 07       	cpc	r19, r21
     238:	18 f0       	brcs	.+6      	; 0x240 <dec2binWzerofill+0x66>
      bin[j] = bin[ 31 + i - (j - (bitLength - i)) ];
     23a:	8c 91       	ld	r24, X
     23c:	80 83       	st	Z, r24
     23e:	01 c0       	rjmp	.+2      	; 0x242 <dec2binWzerofill+0x68>
    }else {
      bin[j] = '0';
     240:	90 83       	st	Z, r25
  while (Dec > 0) {
    bin[32+i++] = ((Dec & 1) > 0) ? '1' : '0';
    Dec = Dec >> 1;
  }

  for (unsigned int j = 0; j< bitLength; j++) {
     242:	2f 5f       	subi	r18, 0xFF	; 255
     244:	3f 4f       	sbci	r19, 0xFF	; 255
     246:	11 97       	sbiw	r26, 0x01	; 1
     248:	31 96       	adiw	r30, 0x01	; 1
     24a:	2c 17       	cp	r18, r28
     24c:	3d 07       	cpc	r19, r29
     24e:	90 f3       	brcs	.-28     	; 0x234 <dec2binWzerofill+0x5a>
      bin[j] = bin[ 31 + i - (j - (bitLength - i)) ];
    }else {
      bin[j] = '0';
    }
  }
  bin[bitLength] = '\0';
     250:	cf 54       	subi	r28, 0x4F	; 79
     252:	df 4f       	sbci	r29, 0xFF	; 255
     254:	18 82       	st	Y, r1
  
  return bin;
}
     256:	81 eb       	ldi	r24, 0xB1	; 177
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	1f 91       	pop	r17
     260:	0f 91       	pop	r16
     262:	08 95       	ret

00000264 <transmit>:

void transmit(int nHighPulses, int nLowPulses){
    int tmpDelay;
    // set Output pin to high
    PORTD |= (1<<STECKDOSENPIN);
     264:	92 9a       	sbi	0x12, 2	; 18

    for(tmpDelay=0;tmpDelay < nPulseLength*nHighPulses;tmpDelay++){
     266:	40 91 6e 00 	lds	r20, 0x006E
     26a:	50 91 6f 00 	lds	r21, 0x006F
     26e:	84 9f       	mul	r24, r20
     270:	f0 01       	movw	r30, r0
     272:	85 9f       	mul	r24, r21
     274:	f0 0d       	add	r31, r0
     276:	94 9f       	mul	r25, r20
     278:	f0 0d       	add	r31, r0
     27a:	11 24       	eor	r1, r1
     27c:	80 e0       	ldi	r24, 0x00	; 0
     27e:	90 e0       	ldi	r25, 0x00	; 0
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     280:	32 e0       	ldi	r19, 0x02	; 2
     282:	04 c0       	rjmp	.+8      	; 0x28c <transmit+0x28>
     284:	23 2f       	mov	r18, r19
     286:	2a 95       	dec	r18
     288:	f1 f7       	brne	.-4      	; 0x286 <transmit+0x22>
     28a:	01 96       	adiw	r24, 0x01	; 1
     28c:	8e 17       	cp	r24, r30
     28e:	9f 07       	cpc	r25, r31
     290:	cc f3       	brlt	.-14     	; 0x284 <transmit+0x20>
        _delay_us(1);
    }

    PORTD &= ~(1<<STECKDOSENPIN);
     292:	92 98       	cbi	0x12, 2	; 18

    for(tmpDelay=0;tmpDelay < nPulseLength*nLowPulses;tmpDelay++){
     294:	46 9f       	mul	r20, r22
     296:	f0 01       	movw	r30, r0
     298:	47 9f       	mul	r20, r23
     29a:	f0 0d       	add	r31, r0
     29c:	56 9f       	mul	r21, r22
     29e:	f0 0d       	add	r31, r0
     2a0:	11 24       	eor	r1, r1
     2a2:	80 e0       	ldi	r24, 0x00	; 0
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	32 e0       	ldi	r19, 0x02	; 2
     2a8:	04 c0       	rjmp	.+8      	; 0x2b2 <transmit+0x4e>
     2aa:	23 2f       	mov	r18, r19
     2ac:	2a 95       	dec	r18
     2ae:	f1 f7       	brne	.-4      	; 0x2ac <transmit+0x48>
     2b0:	01 96       	adiw	r24, 0x01	; 1
     2b2:	8e 17       	cp	r24, r30
     2b4:	9f 07       	cpc	r25, r31
     2b6:	cc f3       	brlt	.-14     	; 0x2aa <transmit+0x46>
        _delay_us(1);
    }

}
     2b8:	08 95       	ret

000002ba <send0>:

void send0(void){
	if(nProtocol == 1) transmit(1,3);
     2ba:	80 91 6c 00 	lds	r24, 0x006C
     2be:	90 91 6d 00 	lds	r25, 0x006D
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	29 f4       	brne	.+10     	; 0x2d0 <send0+0x16>
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	63 e0       	ldi	r22, 0x03	; 3
     2cc:	70 e0       	ldi	r23, 0x00	; 0
     2ce:	ca df       	rcall	.-108    	; 0x264 <transmit>
	if(nProtocol == 2) transmit(1,2);
     2d0:	80 91 6c 00 	lds	r24, 0x006C
     2d4:	90 91 6d 00 	lds	r25, 0x006D
     2d8:	02 97       	sbiw	r24, 0x02	; 2
     2da:	29 f4       	brne	.+10     	; 0x2e6 <send0+0x2c>
     2dc:	81 e0       	ldi	r24, 0x01	; 1
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	62 e0       	ldi	r22, 0x02	; 2
     2e2:	70 e0       	ldi	r23, 0x00	; 0
     2e4:	bf df       	rcall	.-130    	; 0x264 <transmit>
     2e6:	08 95       	ret

000002e8 <send1>:
}

void send1(void){
	if(nProtocol == 1) transmit(3,1);
     2e8:	80 91 6c 00 	lds	r24, 0x006C
     2ec:	90 91 6d 00 	lds	r25, 0x006D
     2f0:	01 97       	sbiw	r24, 0x01	; 1
     2f2:	29 f4       	brne	.+10     	; 0x2fe <send1+0x16>
     2f4:	83 e0       	ldi	r24, 0x03	; 3
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	61 e0       	ldi	r22, 0x01	; 1
     2fa:	70 e0       	ldi	r23, 0x00	; 0
     2fc:	b3 df       	rcall	.-154    	; 0x264 <transmit>
	if(nProtocol == 2) transmit(2,1);
     2fe:	80 91 6c 00 	lds	r24, 0x006C
     302:	90 91 6d 00 	lds	r25, 0x006D
     306:	02 97       	sbiw	r24, 0x02	; 2
     308:	29 f4       	brne	.+10     	; 0x314 <send1+0x2c>
     30a:	82 e0       	ldi	r24, 0x02	; 2
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	61 e0       	ldi	r22, 0x01	; 1
     310:	70 e0       	ldi	r23, 0x00	; 0
     312:	a8 df       	rcall	.-176    	; 0x264 <transmit>
     314:	08 95       	ret

00000316 <sendT0>:
}

void sendT0(void){
    transmit(1,3);
     316:	81 e0       	ldi	r24, 0x01	; 1
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	63 e0       	ldi	r22, 0x03	; 3
     31c:	70 e0       	ldi	r23, 0x00	; 0
     31e:	a2 df       	rcall	.-188    	; 0x264 <transmit>
    transmit(1,3);
     320:	81 e0       	ldi	r24, 0x01	; 1
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	63 e0       	ldi	r22, 0x03	; 3
     326:	70 e0       	ldi	r23, 0x00	; 0
     328:	9d df       	rcall	.-198    	; 0x264 <transmit>
}
     32a:	08 95       	ret

0000032c <sendT1>:

void sendT1(void){
	transmit(3,1);
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	61 e0       	ldi	r22, 0x01	; 1
     332:	70 e0       	ldi	r23, 0x00	; 0
     334:	97 df       	rcall	.-210    	; 0x264 <transmit>
	transmit(3,1);
     336:	83 e0       	ldi	r24, 0x03	; 3
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	61 e0       	ldi	r22, 0x01	; 1
     33c:	70 e0       	ldi	r23, 0x00	; 0
     33e:	92 df       	rcall	.-220    	; 0x264 <transmit>
}
     340:	08 95       	ret

00000342 <sendTF>:

void sendTF(void){
	transmit(1,3);
     342:	81 e0       	ldi	r24, 0x01	; 1
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	63 e0       	ldi	r22, 0x03	; 3
     348:	70 e0       	ldi	r23, 0x00	; 0
     34a:	8c df       	rcall	.-232    	; 0x264 <transmit>
	transmit(3,1);
     34c:	83 e0       	ldi	r24, 0x03	; 3
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	61 e0       	ldi	r22, 0x01	; 1
     352:	70 e0       	ldi	r23, 0x00	; 0
     354:	87 df       	rcall	.-242    	; 0x264 <transmit>
}
     356:	08 95       	ret

00000358 <sendSync>:

void sendSync(void){
	if(nProtocol == 1) transmit(1,31);
     358:	80 91 6c 00 	lds	r24, 0x006C
     35c:	90 91 6d 00 	lds	r25, 0x006D
     360:	01 97       	sbiw	r24, 0x01	; 1
     362:	29 f4       	brne	.+10     	; 0x36e <sendSync+0x16>
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	6f e1       	ldi	r22, 0x1F	; 31
     36a:	70 e0       	ldi	r23, 0x00	; 0
     36c:	7b df       	rcall	.-266    	; 0x264 <transmit>
	if(nProtocol == 2) transmit(1,10);
     36e:	80 91 6c 00 	lds	r24, 0x006C
     372:	90 91 6d 00 	lds	r25, 0x006D
     376:	02 97       	sbiw	r24, 0x02	; 2
     378:	29 f4       	brne	.+10     	; 0x384 <sendSync+0x2c>
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	6a e0       	ldi	r22, 0x0A	; 10
     380:	70 e0       	ldi	r23, 0x00	; 0
     382:	70 df       	rcall	.-288    	; 0x264 <transmit>
     384:	08 95       	ret

00000386 <getCodeWordA>:
}

char* getCodeWordA(char* sGroup, int nChannelCode, bool bStatus) {
     386:	0f 93       	push	r16
     388:	1f 93       	push	r17
     38a:	df 93       	push	r29
     38c:	cf 93       	push	r28
     38e:	cd b7       	in	r28, 0x3d	; 61
     390:	de b7       	in	r29, 0x3e	; 62
     392:	2c 97       	sbiw	r28, 0x0c	; 12
     394:	0f b6       	in	r0, 0x3f	; 63
     396:	f8 94       	cli
     398:	de bf       	out	0x3e, r29	; 62
     39a:	0f be       	out	0x3f, r0	; 63
     39c:	cd bf       	out	0x3d, r28	; 61
     39e:	9c 01       	movw	r18, r24
     3a0:	04 2f       	mov	r16, r20
   int nReturnPos = 0;
   static char sReturn[13];

  char* code[6] = { "FFFFF", "0FFFF", "F0FFF", "FF0FF", "FFF0F", "FFFF0" };
     3a2:	fe 01       	movw	r30, r28
     3a4:	31 96       	adiw	r30, 0x01	; 1
     3a6:	a6 e9       	ldi	r26, 0x96	; 150
     3a8:	b0 e0       	ldi	r27, 0x00	; 0
     3aa:	8c e0       	ldi	r24, 0x0C	; 12
     3ac:	0d 90       	ld	r0, X+
     3ae:	01 92       	st	Z+, r0
     3b0:	81 50       	subi	r24, 0x01	; 1
     3b2:	e1 f7       	brne	.-8      	; 0x3ac <getCodeWordA+0x26>

  if (nChannelCode < 1 || nChannelCode > 5) {
     3b4:	cb 01       	movw	r24, r22
     3b6:	01 97       	sbiw	r24, 0x01	; 1
     3b8:	05 97       	sbiw	r24, 0x05	; 5
     3ba:	08 f0       	brcs	.+2      	; 0x3be <getCodeWordA+0x38>
     3bc:	4f c0       	rjmp	.+158    	; 0x45c <getCodeWordA+0xd6>
     3be:	e4 ea       	ldi	r30, 0xA4	; 164
     3c0:	f0 e0       	ldi	r31, 0x00	; 0
     3c2:	81 e0       	ldi	r24, 0x01	; 1
     3c4:	90 e0       	ldi	r25, 0x00	; 0
  
  for (int i = 0; i<5; i++) {
    if (sGroup[i] == '0') {
      sReturn[nReturnPos++] = 'F';
    } else if (sGroup[i] == '1') {
      sReturn[nReturnPos++] = '0';
     3c6:	10 e3       	ldi	r17, 0x30	; 48
      return '\0';
  }
  
  for (int i = 0; i<5; i++) {
    if (sGroup[i] == '0') {
      sReturn[nReturnPos++] = 'F';
     3c8:	46 e4       	ldi	r20, 0x46	; 70
  if (nChannelCode < 1 || nChannelCode > 5) {
      return '\0';
  }
  
  for (int i = 0; i<5; i++) {
    if (sGroup[i] == '0') {
     3ca:	d9 01       	movw	r26, r18
     3cc:	5c 91       	ld	r21, X
     3ce:	50 33       	cpi	r21, 0x30	; 48
     3d0:	11 f4       	brne	.+4      	; 0x3d6 <getCodeWordA+0x50>
      sReturn[nReturnPos++] = 'F';
     3d2:	40 83       	st	Z, r20
     3d4:	04 c0       	rjmp	.+8      	; 0x3de <getCodeWordA+0x58>
    } else if (sGroup[i] == '1') {
     3d6:	51 33       	cpi	r21, 0x31	; 49
     3d8:	09 f0       	breq	.+2      	; 0x3dc <getCodeWordA+0x56>
     3da:	40 c0       	rjmp	.+128    	; 0x45c <getCodeWordA+0xd6>
      sReturn[nReturnPos++] = '0';
     3dc:	10 83       	st	Z, r17
     3de:	dc 01       	movw	r26, r24
     3e0:	01 96       	adiw	r24, 0x01	; 1
     3e2:	2f 5f       	subi	r18, 0xFF	; 255
     3e4:	3f 4f       	sbci	r19, 0xFF	; 255
     3e6:	31 96       	adiw	r30, 0x01	; 1

  if (nChannelCode < 1 || nChannelCode > 5) {
      return '\0';
  }
  
  for (int i = 0; i<5; i++) {
     3e8:	86 30       	cpi	r24, 0x06	; 6
     3ea:	91 05       	cpc	r25, r1
     3ec:	71 f7       	brne	.-36     	; 0x3ca <getCodeWordA+0x44>
      return '\0';
    }
  }
  
  for (int i = 0; i<5; i++) {
    sReturn[nReturnPos++] = code[ nChannelCode ][i];
     3ee:	66 0f       	add	r22, r22
     3f0:	77 1f       	adc	r23, r23
     3f2:	6c 0f       	add	r22, r28
     3f4:	7d 1f       	adc	r23, r29
     3f6:	fb 01       	movw	r30, r22
     3f8:	61 81       	ldd	r22, Z+1	; 0x01
     3fa:	72 81       	ldd	r23, Z+2	; 0x02
     3fc:	ad 01       	movw	r20, r26
     3fe:	4c 55       	subi	r20, 0x5C	; 92
     400:	5f 4f       	sbci	r21, 0xFF	; 255
     402:	20 e0       	ldi	r18, 0x00	; 0
     404:	30 e0       	ldi	r19, 0x00	; 0
     406:	fb 01       	movw	r30, r22
     408:	e2 0f       	add	r30, r18
     40a:	f3 1f       	adc	r31, r19
     40c:	80 81       	ld	r24, Z
     40e:	fa 01       	movw	r30, r20
     410:	81 93       	st	Z+, r24
     412:	af 01       	movw	r20, r30
    } else {
      return '\0';
    }
  }
  
  for (int i = 0; i<5; i++) {
     414:	2f 5f       	subi	r18, 0xFF	; 255
     416:	3f 4f       	sbci	r19, 0xFF	; 255
     418:	25 30       	cpi	r18, 0x05	; 5
     41a:	31 05       	cpc	r19, r1
     41c:	a1 f7       	brne	.-24     	; 0x406 <getCodeWordA+0x80>
     41e:	9d 01       	movw	r18, r26
     420:	27 55       	subi	r18, 0x57	; 87
     422:	3f 4f       	sbci	r19, 0xFF	; 255
     424:	fd 01       	movw	r30, r26
     426:	36 96       	adiw	r30, 0x06	; 6
     428:	bd 01       	movw	r22, r26
     42a:	69 5f       	subi	r22, 0xF9	; 249
     42c:	7f 4f       	sbci	r23, 0xFF	; 255
    sReturn[nReturnPos++] = code[ nChannelCode ][i];
  }
  
  if (bStatus) {
     42e:	00 23       	and	r16, r16
     430:	39 f0       	breq	.+14     	; 0x440 <getCodeWordA+0xba>
    sReturn[nReturnPos++] = '0';
     432:	80 e3       	ldi	r24, 0x30	; 48
     434:	d9 01       	movw	r26, r18
     436:	8c 93       	st	X, r24
    sReturn[nReturnPos++] = 'F';
     438:	ec 55       	subi	r30, 0x5C	; 92
     43a:	ff 4f       	sbci	r31, 0xFF	; 255
     43c:	86 e4       	ldi	r24, 0x46	; 70
     43e:	06 c0       	rjmp	.+12     	; 0x44c <getCodeWordA+0xc6>
  } else {
    sReturn[nReturnPos++] = 'F';
     440:	86 e4       	ldi	r24, 0x46	; 70
     442:	d9 01       	movw	r26, r18
     444:	8c 93       	st	X, r24
    sReturn[nReturnPos++] = '0';
     446:	ec 55       	subi	r30, 0x5C	; 92
     448:	ff 4f       	sbci	r31, 0xFF	; 255
     44a:	80 e3       	ldi	r24, 0x30	; 48
     44c:	80 83       	st	Z, r24
  }
  sReturn[nReturnPos] = '\0';
     44e:	6c 55       	subi	r22, 0x5C	; 92
     450:	7f 4f       	sbci	r23, 0xFF	; 255
     452:	fb 01       	movw	r30, r22
     454:	10 82       	st	Z, r1
     456:	24 ea       	ldi	r18, 0xA4	; 164
     458:	30 e0       	ldi	r19, 0x00	; 0
     45a:	02 c0       	rjmp	.+4      	; 0x460 <__stack+0x1>

  return sReturn;
     45c:	20 e0       	ldi	r18, 0x00	; 0
     45e:	30 e0       	ldi	r19, 0x00	; 0
}
     460:	c9 01       	movw	r24, r18
     462:	2c 96       	adiw	r28, 0x0c	; 12
     464:	0f b6       	in	r0, 0x3f	; 63
     466:	f8 94       	cli
     468:	de bf       	out	0x3e, r29	; 62
     46a:	0f be       	out	0x3f, r0	; 63
     46c:	cd bf       	out	0x3d, r28	; 61
     46e:	cf 91       	pop	r28
     470:	df 91       	pop	r29
     472:	1f 91       	pop	r17
     474:	0f 91       	pop	r16
     476:	08 95       	ret

00000478 <sendTriState>:
    sendSync();
  }
}
*/

void sendTriState(char* sCodeWord) {
     478:	ef 92       	push	r14
     47a:	ff 92       	push	r15
     47c:	0f 93       	push	r16
     47e:	1f 93       	push	r17
     480:	cf 93       	push	r28
     482:	df 93       	push	r29
     484:	7c 01       	movw	r14, r24
     486:	00 e0       	ldi	r16, 0x00	; 0
     488:	10 e0       	ldi	r17, 0x00	; 0
     48a:	12 c0       	rjmp	.+36     	; 0x4b0 <sendTriState+0x38>
  for (int nRepeat=0; nRepeat<nRepeatTransmit; nRepeat++) {
    int i = 0;
    while (sCodeWord[i] != '\0') {
	if(sCodeWord[i] == '0') sendT0();
     48c:	80 33       	cpi	r24, 0x30	; 48
     48e:	09 f4       	brne	.+2      	; 0x492 <sendTriState+0x1a>
     490:	42 df       	rcall	.-380    	; 0x316 <sendT0>
	if(sCodeWord[i] == 'F') sendTF();
     492:	88 81       	ld	r24, Y
     494:	86 34       	cpi	r24, 0x46	; 70
     496:	09 f4       	brne	.+2      	; 0x49a <sendTriState+0x22>
     498:	54 df       	rcall	.-344    	; 0x342 <sendTF>
	if(sCodeWord[i] == '1') sendT1();
     49a:	88 81       	ld	r24, Y
     49c:	81 33       	cpi	r24, 0x31	; 49
     49e:	09 f4       	brne	.+2      	; 0x4a2 <sendTriState+0x2a>
     4a0:	45 df       	rcall	.-374    	; 0x32c <sendT1>
     4a2:	21 96       	adiw	r28, 0x01	; 1
*/

void sendTriState(char* sCodeWord) {
  for (int nRepeat=0; nRepeat<nRepeatTransmit; nRepeat++) {
    int i = 0;
    while (sCodeWord[i] != '\0') {
     4a4:	88 81       	ld	r24, Y
     4a6:	88 23       	and	r24, r24
     4a8:	89 f7       	brne	.-30     	; 0x48c <sendTriState+0x14>
	if(sCodeWord[i] == '0') sendT0();
	if(sCodeWord[i] == 'F') sendTF();
	if(sCodeWord[i] == '1') sendT1();
	i++;
    }
    sendSync();    
     4aa:	56 df       	rcall	.-340    	; 0x358 <sendSync>
  }
}
*/

void sendTriState(char* sCodeWord) {
  for (int nRepeat=0; nRepeat<nRepeatTransmit; nRepeat++) {
     4ac:	0f 5f       	subi	r16, 0xFF	; 255
     4ae:	1f 4f       	sbci	r17, 0xFF	; 255
     4b0:	80 91 6a 00 	lds	r24, 0x006A
     4b4:	90 91 6b 00 	lds	r25, 0x006B
     4b8:	08 17       	cp	r16, r24
     4ba:	19 07       	cpc	r17, r25
     4bc:	14 f4       	brge	.+4      	; 0x4c2 <sendTriState+0x4a>
     4be:	e7 01       	movw	r28, r14
     4c0:	f1 cf       	rjmp	.-30     	; 0x4a4 <sendTriState+0x2c>
	if(sCodeWord[i] == '1') sendT1();
	i++;
    }
    sendSync();    
  }
}
     4c2:	df 91       	pop	r29
     4c4:	cf 91       	pop	r28
     4c6:	1f 91       	pop	r17
     4c8:	0f 91       	pop	r16
     4ca:	ff 90       	pop	r15
     4cc:	ef 90       	pop	r14
     4ce:	08 95       	ret

000004d0 <switchOn>:

void switchOn(char* sGroup, int nChannel){
    sendTriState(getCodeWordA(sGroup, nChannel, true) );
     4d0:	41 e0       	ldi	r20, 0x01	; 1
     4d2:	59 df       	rcall	.-334    	; 0x386 <getCodeWordA>
     4d4:	d1 df       	rcall	.-94     	; 0x478 <sendTriState>
}
     4d6:	08 95       	ret

000004d8 <switchOff>:

void switchOff(char *sGroup, int nChannel){
    sendTriState(getCodeWordA(sGroup, nChannel, false) );
     4d8:	40 e0       	ldi	r20, 0x00	; 0
     4da:	55 df       	rcall	.-342    	; 0x386 <getCodeWordA>
     4dc:	cd df       	rcall	.-102    	; 0x478 <sendTriState>
}
     4de:	08 95       	ret

000004e0 <__vector_11>:
	        }
	}
    }
}

ISR(USART_RXC_vect) {
     4e0:	1f 92       	push	r1
     4e2:	0f 92       	push	r0
     4e4:	0f b6       	in	r0, 0x3f	; 63
     4e6:	0f 92       	push	r0
     4e8:	11 24       	eor	r1, r1
     4ea:	8f 93       	push	r24
     4ec:	9f 93       	push	r25
     4ee:	ef 93       	push	r30
     4f0:	ff 93       	push	r31
    static uint8_t uart_rx_cnt=0;     // Zähler für empfangene Zeichen
    uint8_t data;

    data = UDR;
     4f2:	9c b1       	in	r25, 0x0c	; 12

    if (!uart_rx_flag) {
     4f4:	80 91 a2 00 	lds	r24, 0x00A2
     4f8:	88 23       	and	r24, r24
     4fa:	c9 f4       	brne	.+50     	; 0x52e <__vector_11+0x4e>
     4fc:	80 91 a3 00 	lds	r24, 0x00A3
        if (data == '\r') {
     500:	9d 30       	cpi	r25, 0x0D	; 13
     502:	59 f4       	brne	.+22     	; 0x51a <__vector_11+0x3a>
            uart_rx_buffer[uart_rx_cnt]=0;
     504:	e8 2f       	mov	r30, r24
     506:	f0 e0       	ldi	r31, 0x00	; 0
     508:	ef 50       	subi	r30, 0x0F	; 15
     50a:	fe 4f       	sbci	r31, 0xFE	; 254
     50c:	10 82       	st	Z, r1
            uart_rx_flag=1;
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	80 93 a2 00 	sts	0x00A2, r24
            uart_rx_cnt=0;
     514:	10 92 a3 00 	sts	0x00A3, r1
     518:	0a c0       	rjmp	.+20     	; 0x52e <__vector_11+0x4e>
        }else if (uart_rx_cnt<(uart_buffer_size-1)) {
     51a:	8f 3f       	cpi	r24, 0xFF	; 255
     51c:	41 f0       	breq	.+16     	; 0x52e <__vector_11+0x4e>
            uart_rx_buffer[uart_rx_cnt]=data;
     51e:	e8 2f       	mov	r30, r24
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	ef 50       	subi	r30, 0x0F	; 15
     524:	fe 4f       	sbci	r31, 0xFE	; 254
     526:	90 83       	st	Z, r25
            uart_rx_cnt++; // Zähler erhöhen
     528:	8f 5f       	subi	r24, 0xFF	; 255
     52a:	80 93 a3 00 	sts	0x00A3, r24
        }
    }
}
     52e:	ff 91       	pop	r31
     530:	ef 91       	pop	r30
     532:	9f 91       	pop	r25
     534:	8f 91       	pop	r24
     536:	0f 90       	pop	r0
     538:	0f be       	out	0x3f, r0	; 63
     53a:	0f 90       	pop	r0
     53c:	1f 90       	pop	r1
     53e:	18 95       	reti

00000540 <__vector_12>:


ISR(USART_UDRE_vect) {
     540:	1f 92       	push	r1
     542:	0f 92       	push	r0
     544:	0f b6       	in	r0, 0x3f	; 63
     546:	0f 92       	push	r0
     548:	11 24       	eor	r1, r1
     54a:	8f 93       	push	r24
     54c:	9f 93       	push	r25
     54e:	ef 93       	push	r30
     550:	ff 93       	push	r31
    static char* uart_tx_p = uart_tx_buffer;    
    uint8_t data;

    data = *uart_tx_p++;
     552:	e0 91 70 00 	lds	r30, 0x0070
     556:	f0 91 71 00 	lds	r31, 0x0071
     55a:	81 91       	ld	r24, Z+
     55c:	f0 93 71 00 	sts	0x0071, r31
     560:	e0 93 70 00 	sts	0x0070, r30

    if (data == 0 ) {
     564:	88 23       	and	r24, r24
     566:	59 f4       	brne	.+22     	; 0x57e <__vector_12+0x3e>
        UCSRB &= ~(1<<UDRIE);       // ja, dann UDRE Interrupt ausschalten
     568:	55 98       	cbi	0x0a, 5	; 10
        uart_tx_p = uart_tx_buffer; // Pointer zurücksetzen
     56a:	81 ef       	ldi	r24, 0xF1	; 241
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	90 93 71 00 	sts	0x0071, r25
     572:	80 93 70 00 	sts	0x0070, r24
        uart_tx_flag = 1;           // Flag setzen, Übertragung beeendet
     576:	81 e0       	ldi	r24, 0x01	; 1
     578:	80 93 69 00 	sts	0x0069, r24
     57c:	05 c0       	rjmp	.+10     	; 0x588 <__vector_12+0x48>
    }else{
	 UDR = data;                // nein, Daten senden
     57e:	8c b9       	out	0x0c, r24	; 12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     580:	80 e2       	ldi	r24, 0x20	; 32
     582:	9e e4       	ldi	r25, 0x4E	; 78
     584:	01 97       	sbiw	r24, 0x01	; 1
     586:	f1 f7       	brne	.-4      	; 0x584 <__vector_12+0x44>
	_delay_ms(10);
	}
}
     588:	ff 91       	pop	r31
     58a:	ef 91       	pop	r30
     58c:	9f 91       	pop	r25
     58e:	8f 91       	pop	r24
     590:	0f 90       	pop	r0
     592:	0f be       	out	0x3f, r0	; 63
     594:	0f 90       	pop	r0
     596:	1f 90       	pop	r1
     598:	18 95       	reti

0000059a <get_string>:
      uart_tx_flag = 0;                    
      UCSRB |= (1<<UDRIE); 
   }
}

void get_string(char *daten) {
     59a:	9c 01       	movw	r18, r24
   if (uart_rx_flag==1) {
     59c:	80 91 a2 00 	lds	r24, 0x00A2
     5a0:	81 30       	cpi	r24, 0x01	; 1
     5a2:	31 f4       	brne	.+12     	; 0x5b0 <get_string+0x16>
      strcpy(daten, uart_rx_buffer);
     5a4:	c9 01       	movw	r24, r18
     5a6:	61 ef       	ldi	r22, 0xF1	; 241
     5a8:	71 e0       	ldi	r23, 0x01	; 1
     5aa:	ff d2       	rcall	.+1534   	; 0xbaa <strcpy>
      uart_rx_flag = 0;
     5ac:	10 92 a2 00 	sts	0x00A2, r1
     5b0:	08 95       	ret

000005b2 <put_string>:

int nRepeatTransmit = 10; // wie oft soll sendung an steckdose wiederholt werden
int nProtocol = 1;
int nPulseLength = 350;

void put_string(char *daten) {
     5b2:	bc 01       	movw	r22, r24
   if (uart_tx_flag == 1) {
     5b4:	80 91 69 00 	lds	r24, 0x0069
     5b8:	81 30       	cpi	r24, 0x01	; 1
     5ba:	31 f4       	brne	.+12     	; 0x5c8 <put_string+0x16>
      strcpy(uart_tx_buffer, daten);      
     5bc:	81 ef       	ldi	r24, 0xF1	; 241
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	f4 d2       	rcall	.+1512   	; 0xbaa <strcpy>
      uart_tx_flag = 0;                    
     5c2:	10 92 69 00 	sts	0x0069, r1
      UCSRB |= (1<<UDRIE); 
     5c6:	55 9a       	sbi	0x0a, 5	; 10
     5c8:	08 95       	ret

000005ca <send_ok>:
      strcpy(daten, uart_rx_buffer);
      uart_rx_flag = 0;
   }
}

void send_ok(void){
     5ca:	df 93       	push	r29
     5cc:	cf 93       	push	r28
     5ce:	00 d0       	rcall	.+0      	; 0x5d0 <send_ok+0x6>
     5d0:	00 d0       	rcall	.+0      	; 0x5d2 <send_ok+0x8>
     5d2:	cd b7       	in	r28, 0x3d	; 61
     5d4:	de b7       	in	r29, 0x3e	; 62
	char message[4];
	message[0] = 'O';
     5d6:	8f e4       	ldi	r24, 0x4F	; 79
     5d8:	89 83       	std	Y+1, r24	; 0x01
	message[1] = 'K';
     5da:	8b e4       	ldi	r24, 0x4B	; 75
     5dc:	8a 83       	std	Y+2, r24	; 0x02
	message[2] = '\n';
     5de:	8a e0       	ldi	r24, 0x0A	; 10
     5e0:	8b 83       	std	Y+3, r24	; 0x03
	message[3] = '\r';
     5e2:	8d e0       	ldi	r24, 0x0D	; 13
     5e4:	8c 83       	std	Y+4, r24	; 0x04
	put_string(message);
     5e6:	ce 01       	movw	r24, r28
     5e8:	01 96       	adiw	r24, 0x01	; 1
     5ea:	e3 df       	rcall	.-58     	; 0x5b2 <put_string>
}
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	cf 91       	pop	r28
     5f6:	df 91       	pop	r29
     5f8:	08 95       	ret

000005fa <main>:

void switchOff(char *sGroup, int nChannel){
    sendTriState(getCodeWordA(sGroup, nChannel, false) );
}

int main (void) {
     5fa:	8f 92       	push	r8
     5fc:	9f 92       	push	r9
     5fe:	bf 92       	push	r11
     600:	cf 92       	push	r12
     602:	df 92       	push	r13
     604:	ef 92       	push	r14
     606:	ff 92       	push	r15
     608:	0f 93       	push	r16
     60a:	1f 93       	push	r17
     60c:	df 93       	push	r29
     60e:	cf 93       	push	r28
     610:	cd b7       	in	r28, 0x3d	; 61
     612:	de b7       	in	r29, 0x3e	; 62
     614:	c0 54       	subi	r28, 0x40	; 64
     616:	d0 40       	sbci	r29, 0x00	; 0
     618:	0f b6       	in	r0, 0x3f	; 63
     61a:	f8 94       	cli
     61c:	de bf       	out	0x3e, r29	; 62
     61e:	0f be       	out	0x3f, r0	; 63
     620:	cd bf       	out	0x3d, r28	; 61
    uint8_t buffer_full=0;  // noch ein Flag, aber nur in der Hauptschleife
    char * charpointer;     // Hilfszeiger
	int sampleValue = 0;

    // IO konfigurieren
    DDRB = 0xFF;
     622:	8f ef       	ldi	r24, 0xFF	; 255
     624:	87 bb       	out	0x17, r24	; 23
    DDRC = 0x00;
     626:	14 ba       	out	0x14, r1	; 20
	PORTC = 0x00;
     628:	15 ba       	out	0x15, r1	; 21
    //DDRD = 0xFF;
    DDRD |= (1<<STECKDOSENPIN); // Output pin für Steckdosensteuerung
     62a:	8a 9a       	sbi	0x11, 2	; 17
    }
*/

    //DDRD = (DDRD|0x01);

	ADMUX = 0x00;
     62c:	17 b8       	out	0x07, r1	; 7
	ADMUX |= (1<<REFS1)| (1<<REFS0); // 0b01000000; // interne Ref-Spannung, avcc, pc0 als adc
     62e:	87 b1       	in	r24, 0x07	; 7
     630:	80 6c       	ori	r24, 0xC0	; 192
     632:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
     634:	86 b1       	in	r24, 0x06	; 6
     636:	87 68       	ori	r24, 0x87	; 135
     638:	86 b9       	out	0x06, r24	; 6
    TCCR1B|=(0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(0<<CS10);
    OCR1A = 1300;
    */

    // UART konfigurieren
    UBRRH = UBRR_VAL >> 8;
     63a:	10 bc       	out	0x20, r1	; 32
    UBRRL = UBRR_VAL & 0xFF;
     63c:	83 e3       	ldi	r24, 0x33	; 51
     63e:	89 b9       	out	0x09, r24	; 9
    UCSRB = (1<<RXCIE) | (1<<RXEN) | (1<<TXEN); 
     640:	88 e9       	ldi	r24, 0x98	; 152
     642:	8a b9       	out	0x0a, r24	; 10

    UCSRC = (1<<URSEL)|(1<<USBS)|(3<<UCSZ0);      //Asynchron 8N1
     644:	8e e8       	ldi	r24, 0x8E	; 142
     646:	80 bd       	out	0x20, r24	; 32
    // Stringpuffer initialisieren
    //stringbuffer[0] = '\n';
    //stringbuffer[1] = '\r';

    // Interrupts freigeben
    sei();
     648:	78 94       	sei
     64a:	20 e0       	ldi	r18, 0x00	; 0

    while(1) {
        if (uart_rx_flag==1 && buffer_full==0) {
            get_string(stringbuffer);
     64c:	7e 01       	movw	r14, r28
     64e:	08 94       	sec
     650:	e1 1c       	adc	r14, r1
     652:	f1 1c       	adc	r15, r1
     654:	50 e2       	ldi	r21, 0x20	; 32
     656:	85 2e       	mov	r8, r21
     658:	5e e4       	ldi	r21, 0x4E	; 78
     65a:	95 2e       	mov	r9, r21
		        switchOff("11111", stringbuffer[1] - '0');
			_delay_ms(100);
		        switchOff("11111", stringbuffer[1] - '0');
			_delay_ms(100);
		}	
		stringbuffer[0] = 'N';
     65c:	4e e4       	ldi	r20, 0x4E	; 78
     65e:	b4 2e       	mov	r11, r20
     660:	38 ec       	ldi	r19, 0xC8	; 200
     662:	c3 2e       	mov	r12, r19
     664:	d1 2c       	mov	r13, r1

    // Interrupts freigeben
    sei();

    while(1) {
        if (uart_rx_flag==1 && buffer_full==0) {
     666:	80 91 a2 00 	lds	r24, 0x00A2
     66a:	81 30       	cpi	r24, 0x01	; 1
     66c:	29 f4       	brne	.+10     	; 0x678 <main+0x7e>
     66e:	22 23       	and	r18, r18
     670:	11 f4       	brne	.+4      	; 0x676 <main+0x7c>
            get_string(stringbuffer);
     672:	c7 01       	movw	r24, r14
     674:	92 df       	rcall	.-220    	; 0x59a <get_string>
     676:	21 e0       	ldi	r18, 0x01	; 1

	/*
	 * zum testen, falls "S1" gesendet wurde,
	 * schalte Pin C0 ein
	 */
	if(stringbuffer[0] == 'S'){
     678:	89 81       	ldd	r24, Y+1	; 0x01
     67a:	83 35       	cpi	r24, 0x53	; 83
     67c:	29 f4       	brne	.+10     	; 0x688 <main+0x8e>
		if(stringbuffer[1] == '1'){
     67e:	8a 81       	ldd	r24, Y+2	; 0x02
     680:	81 33       	cpi	r24, 0x31	; 49
     682:	89 f7       	brne	.-30     	; 0x666 <main+0x6c>
			PORTC |= (1<<5);
     684:	ad 9a       	sbi	0x15, 5	; 21
     686:	06 c0       	rjmp	.+12     	; 0x694 <main+0x9a>
			send_ok();
			// put other char in there to not trigger it again
			stringbuffer[0] = 'N';
			buffer_full = 0;
		}	
	}else if(stringbuffer[0] == 'U'){
     688:	85 35       	cpi	r24, 0x55	; 85
     68a:	31 f4       	brne	.+12     	; 0x698 <main+0x9e>
		if(stringbuffer[1] == '1'){
     68c:	8a 81       	ldd	r24, Y+2	; 0x02
     68e:	81 33       	cpi	r24, 0x31	; 49
     690:	51 f7       	brne	.-44     	; 0x666 <main+0x6c>
			PORTC &= ~(1<<5);
     692:	ad 98       	cbi	0x15, 5	; 21
			send_ok();
     694:	9a df       	rcall	.-204    	; 0x5ca <send_ok>
     696:	5a c0       	rjmp	.+180    	; 0x74c <main+0x152>
			stringbuffer[0] = 'N';
			buffer_full = 0;
		}
	}else if(stringbuffer[0] == 'G'){ // adc wert anfordern
     698:	87 34       	cpi	r24, 0x47	; 71
     69a:	b9 f4       	brne	.+46     	; 0x6ca <main+0xd0>
		ADCSRA |= (1<<ADSC);  //single conversion mode ein
     69c:	36 9a       	sbi	0x06, 6	; 6
		while(ADCSRA & (1<<ADSC));  //warten bis konvertierung abgeschlosen
     69e:	36 99       	sbic	0x06, 6	; 6
     6a0:	fe cf       	rjmp	.-4      	; 0x69e <main+0xa4>
		sampleValue = ADCW;
     6a2:	84 b1       	in	r24, 0x04	; 4
     6a4:	95 b1       	in	r25, 0x05	; 5
		dtostrf( res2temp(adc2res(sampleValue)), 5, 2, stringbuffer );
     6a6:	58 dd       	rcall	.-1360   	; 0x158 <adc2res>
     6a8:	86 dd       	rcall	.-1268   	; 0x1b6 <res2temp>
     6aa:	45 e0       	ldi	r20, 0x05	; 5
     6ac:	22 e0       	ldi	r18, 0x02	; 2
     6ae:	87 01       	movw	r16, r14
     6b0:	51 d2       	rcall	.+1186   	; 0xb54 <dtostrf>
		strcat(stringbuffer, "\n\r");
     6b2:	c7 01       	movw	r24, r14
     6b4:	60 e6       	ldi	r22, 0x60	; 96
     6b6:	70 e0       	ldi	r23, 0x00	; 0
     6b8:	6d d2       	rcall	.+1242   	; 0xb94 <strcat>
     6ba:	88 ee       	ldi	r24, 0xE8	; 232
     6bc:	93 e0       	ldi	r25, 0x03	; 3
     6be:	f6 01       	movw	r30, r12
     6c0:	31 97       	sbiw	r30, 0x01	; 1
     6c2:	f1 f7       	brne	.-4      	; 0x6c0 <main+0xc6>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6c4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6c6:	d9 f7       	brne	.-10     	; 0x6be <main+0xc4>
     6c8:	52 c0       	rjmp	.+164    	; 0x76e <main+0x174>
		_delay_ms(100);
		put_string(stringbuffer);
		buffer_full = 0;
	}else if(stringbuffer[0] == 'L'){ // lichter schalten
     6ca:	8c 34       	cpi	r24, 0x4C	; 76
     6cc:	09 f0       	breq	.+2      	; 0x6d0 <main+0xd6>
     6ce:	40 c0       	rjmp	.+128    	; 0x750 <main+0x156>
		if(stringbuffer[2] == '1'){ // blaues Licht an
     6d0:	8b 81       	ldd	r24, Y+3	; 0x03
     6d2:	81 33       	cpi	r24, 0x31	; 49
     6d4:	e9 f4       	brne	.+58     	; 0x710 <main+0x116>
			// TOBI
		        switchOn("11111", stringbuffer[1] - '0'); // 1st parameter: 1st 5 dip-switches, 2nd parameter: the one switch that is on!
     6d6:	6a 81       	ldd	r22, Y+2	; 0x02
     6d8:	70 e0       	ldi	r23, 0x00	; 0
     6da:	60 53       	subi	r22, 0x30	; 48
     6dc:	70 40       	sbci	r23, 0x00	; 0
     6de:	83 e6       	ldi	r24, 0x63	; 99
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	f6 de       	rcall	.-532    	; 0x4d0 <switchOn>
     6e4:	88 ee       	ldi	r24, 0xE8	; 232
     6e6:	93 e0       	ldi	r25, 0x03	; 3
     6e8:	f6 01       	movw	r30, r12
     6ea:	31 97       	sbiw	r30, 0x01	; 1
     6ec:	f1 f7       	brne	.-4      	; 0x6ea <main+0xf0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6ee:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6f0:	d9 f7       	brne	.-10     	; 0x6e8 <main+0xee>
			_delay_ms(100);
		        switchOn("11111", stringbuffer[1] - '0'); // 1st parameter: 1st 5 dip-switches, 2nd parameter: the one switch that is on!
     6f2:	6a 81       	ldd	r22, Y+2	; 0x02
     6f4:	70 e0       	ldi	r23, 0x00	; 0
     6f6:	60 53       	subi	r22, 0x30	; 48
     6f8:	70 40       	sbci	r23, 0x00	; 0
     6fa:	83 e6       	ldi	r24, 0x63	; 99
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	e8 de       	rcall	.-560    	; 0x4d0 <switchOn>
     700:	88 ee       	ldi	r24, 0xE8	; 232
     702:	93 e0       	ldi	r25, 0x03	; 3
     704:	f6 01       	movw	r30, r12
     706:	31 97       	sbiw	r30, 0x01	; 1
     708:	f1 f7       	brne	.-4      	; 0x706 <main+0x10c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     70a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     70c:	d9 f7       	brne	.-10     	; 0x704 <main+0x10a>
     70e:	1e c0       	rjmp	.+60     	; 0x74c <main+0x152>
			_delay_ms(100);
		}else if(stringbuffer[2] == '0'){ // blaues Licht aus
     710:	80 33       	cpi	r24, 0x30	; 48
     712:	e1 f4       	brne	.+56     	; 0x74c <main+0x152>
		        switchOff("11111", stringbuffer[1] - '0');
     714:	6a 81       	ldd	r22, Y+2	; 0x02
     716:	70 e0       	ldi	r23, 0x00	; 0
     718:	60 53       	subi	r22, 0x30	; 48
     71a:	70 40       	sbci	r23, 0x00	; 0
     71c:	83 e6       	ldi	r24, 0x63	; 99
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	db de       	rcall	.-586    	; 0x4d8 <switchOff>
     722:	88 ee       	ldi	r24, 0xE8	; 232
     724:	93 e0       	ldi	r25, 0x03	; 3
     726:	f6 01       	movw	r30, r12
     728:	31 97       	sbiw	r30, 0x01	; 1
     72a:	f1 f7       	brne	.-4      	; 0x728 <main+0x12e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     72c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     72e:	d9 f7       	brne	.-10     	; 0x726 <main+0x12c>
			_delay_ms(100);
		        switchOff("11111", stringbuffer[1] - '0');
     730:	6a 81       	ldd	r22, Y+2	; 0x02
     732:	70 e0       	ldi	r23, 0x00	; 0
     734:	60 53       	subi	r22, 0x30	; 48
     736:	70 40       	sbci	r23, 0x00	; 0
     738:	83 e6       	ldi	r24, 0x63	; 99
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	cd de       	rcall	.-614    	; 0x4d8 <switchOff>
     73e:	88 ee       	ldi	r24, 0xE8	; 232
     740:	93 e0       	ldi	r25, 0x03	; 3
     742:	f6 01       	movw	r30, r12
     744:	31 97       	sbiw	r30, 0x01	; 1
     746:	f1 f7       	brne	.-4      	; 0x744 <main+0x14a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     748:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     74a:	d9 f7       	brne	.-10     	; 0x742 <main+0x148>
			_delay_ms(100);
		}	
		stringbuffer[0] = 'N';
     74c:	b9 82       	std	Y+1, r11	; 0x01
     74e:	11 c0       	rjmp	.+34     	; 0x772 <main+0x178>
     750:	c4 01       	movw	r24, r8
     752:	01 97       	sbiw	r24, 0x01	; 1
     754:	f1 f7       	brne	.-4      	; 0x752 <main+0x158>
		buffer_full = 0;
	}else{
		_delay_ms(10);
	        if (uart_tx_flag==1 && buffer_full==1) {
     756:	80 91 69 00 	lds	r24, 0x0069
     75a:	81 30       	cpi	r24, 0x01	; 1
     75c:	09 f0       	breq	.+2      	; 0x760 <main+0x166>
     75e:	83 cf       	rjmp	.-250    	; 0x666 <main+0x6c>
     760:	21 30       	cpi	r18, 0x01	; 1
     762:	09 f0       	breq	.+2      	; 0x766 <main+0x16c>
     764:	80 cf       	rjmp	.-256    	; 0x666 <main+0x6c>
	            strcat(stringbuffer, "\n\r");
     766:	c7 01       	movw	r24, r14
     768:	60 e6       	ldi	r22, 0x60	; 96
     76a:	70 e0       	ldi	r23, 0x00	; 0
     76c:	13 d2       	rcall	.+1062   	; 0xb94 <strcat>
	            put_string(stringbuffer); // zurücksenden
     76e:	c7 01       	movw	r24, r14
     770:	20 df       	rcall	.-448    	; 0x5b2 <put_string>
     772:	20 e0       	ldi	r18, 0x00	; 0
     774:	78 cf       	rjmp	.-272    	; 0x666 <main+0x6c>

00000776 <__subsf3>:
     776:	50 58       	subi	r21, 0x80	; 128

00000778 <__addsf3>:
     778:	bb 27       	eor	r27, r27
     77a:	aa 27       	eor	r26, r26
     77c:	0e d0       	rcall	.+28     	; 0x79a <__addsf3x>
     77e:	4d c1       	rjmp	.+666    	; 0xa1a <__fp_round>
     780:	3e d1       	rcall	.+636    	; 0x9fe <__fp_pscA>
     782:	30 f0       	brcs	.+12     	; 0x790 <__addsf3+0x18>
     784:	43 d1       	rcall	.+646    	; 0xa0c <__fp_pscB>
     786:	20 f0       	brcs	.+8      	; 0x790 <__addsf3+0x18>
     788:	31 f4       	brne	.+12     	; 0x796 <__addsf3+0x1e>
     78a:	9f 3f       	cpi	r25, 0xFF	; 255
     78c:	11 f4       	brne	.+4      	; 0x792 <__addsf3+0x1a>
     78e:	1e f4       	brtc	.+6      	; 0x796 <__addsf3+0x1e>
     790:	33 c1       	rjmp	.+614    	; 0x9f8 <__fp_nan>
     792:	0e f4       	brtc	.+2      	; 0x796 <__addsf3+0x1e>
     794:	e0 95       	com	r30
     796:	e7 fb       	bst	r30, 7
     798:	29 c1       	rjmp	.+594    	; 0x9ec <__fp_inf>

0000079a <__addsf3x>:
     79a:	e9 2f       	mov	r30, r25
     79c:	4f d1       	rcall	.+670    	; 0xa3c <__fp_split3>
     79e:	80 f3       	brcs	.-32     	; 0x780 <__addsf3+0x8>
     7a0:	ba 17       	cp	r27, r26
     7a2:	62 07       	cpc	r22, r18
     7a4:	73 07       	cpc	r23, r19
     7a6:	84 07       	cpc	r24, r20
     7a8:	95 07       	cpc	r25, r21
     7aa:	18 f0       	brcs	.+6      	; 0x7b2 <__addsf3x+0x18>
     7ac:	71 f4       	brne	.+28     	; 0x7ca <__addsf3x+0x30>
     7ae:	9e f5       	brtc	.+102    	; 0x816 <__addsf3x+0x7c>
     7b0:	67 c1       	rjmp	.+718    	; 0xa80 <__fp_zero>
     7b2:	0e f4       	brtc	.+2      	; 0x7b6 <__addsf3x+0x1c>
     7b4:	e0 95       	com	r30
     7b6:	0b 2e       	mov	r0, r27
     7b8:	ba 2f       	mov	r27, r26
     7ba:	a0 2d       	mov	r26, r0
     7bc:	0b 01       	movw	r0, r22
     7be:	b9 01       	movw	r22, r18
     7c0:	90 01       	movw	r18, r0
     7c2:	0c 01       	movw	r0, r24
     7c4:	ca 01       	movw	r24, r20
     7c6:	a0 01       	movw	r20, r0
     7c8:	11 24       	eor	r1, r1
     7ca:	ff 27       	eor	r31, r31
     7cc:	59 1b       	sub	r21, r25
     7ce:	99 f0       	breq	.+38     	; 0x7f6 <__addsf3x+0x5c>
     7d0:	59 3f       	cpi	r21, 0xF9	; 249
     7d2:	50 f4       	brcc	.+20     	; 0x7e8 <__addsf3x+0x4e>
     7d4:	50 3e       	cpi	r21, 0xE0	; 224
     7d6:	68 f1       	brcs	.+90     	; 0x832 <__addsf3x+0x98>
     7d8:	1a 16       	cp	r1, r26
     7da:	f0 40       	sbci	r31, 0x00	; 0
     7dc:	a2 2f       	mov	r26, r18
     7de:	23 2f       	mov	r18, r19
     7e0:	34 2f       	mov	r19, r20
     7e2:	44 27       	eor	r20, r20
     7e4:	58 5f       	subi	r21, 0xF8	; 248
     7e6:	f3 cf       	rjmp	.-26     	; 0x7ce <__addsf3x+0x34>
     7e8:	46 95       	lsr	r20
     7ea:	37 95       	ror	r19
     7ec:	27 95       	ror	r18
     7ee:	a7 95       	ror	r26
     7f0:	f0 40       	sbci	r31, 0x00	; 0
     7f2:	53 95       	inc	r21
     7f4:	c9 f7       	brne	.-14     	; 0x7e8 <__addsf3x+0x4e>
     7f6:	7e f4       	brtc	.+30     	; 0x816 <__addsf3x+0x7c>
     7f8:	1f 16       	cp	r1, r31
     7fa:	ba 0b       	sbc	r27, r26
     7fc:	62 0b       	sbc	r22, r18
     7fe:	73 0b       	sbc	r23, r19
     800:	84 0b       	sbc	r24, r20
     802:	ba f0       	brmi	.+46     	; 0x832 <__addsf3x+0x98>
     804:	91 50       	subi	r25, 0x01	; 1
     806:	a1 f0       	breq	.+40     	; 0x830 <__addsf3x+0x96>
     808:	ff 0f       	add	r31, r31
     80a:	bb 1f       	adc	r27, r27
     80c:	66 1f       	adc	r22, r22
     80e:	77 1f       	adc	r23, r23
     810:	88 1f       	adc	r24, r24
     812:	c2 f7       	brpl	.-16     	; 0x804 <__addsf3x+0x6a>
     814:	0e c0       	rjmp	.+28     	; 0x832 <__addsf3x+0x98>
     816:	ba 0f       	add	r27, r26
     818:	62 1f       	adc	r22, r18
     81a:	73 1f       	adc	r23, r19
     81c:	84 1f       	adc	r24, r20
     81e:	48 f4       	brcc	.+18     	; 0x832 <__addsf3x+0x98>
     820:	87 95       	ror	r24
     822:	77 95       	ror	r23
     824:	67 95       	ror	r22
     826:	b7 95       	ror	r27
     828:	f7 95       	ror	r31
     82a:	9e 3f       	cpi	r25, 0xFE	; 254
     82c:	08 f0       	brcs	.+2      	; 0x830 <__addsf3x+0x96>
     82e:	b3 cf       	rjmp	.-154    	; 0x796 <__addsf3+0x1e>
     830:	93 95       	inc	r25
     832:	88 0f       	add	r24, r24
     834:	08 f0       	brcs	.+2      	; 0x838 <__addsf3x+0x9e>
     836:	99 27       	eor	r25, r25
     838:	ee 0f       	add	r30, r30
     83a:	97 95       	ror	r25
     83c:	87 95       	ror	r24
     83e:	08 95       	ret

00000840 <__divsf3>:
     840:	0c d0       	rcall	.+24     	; 0x85a <__divsf3x>
     842:	eb c0       	rjmp	.+470    	; 0xa1a <__fp_round>
     844:	e3 d0       	rcall	.+454    	; 0xa0c <__fp_pscB>
     846:	40 f0       	brcs	.+16     	; 0x858 <__divsf3+0x18>
     848:	da d0       	rcall	.+436    	; 0x9fe <__fp_pscA>
     84a:	30 f0       	brcs	.+12     	; 0x858 <__divsf3+0x18>
     84c:	21 f4       	brne	.+8      	; 0x856 <__divsf3+0x16>
     84e:	5f 3f       	cpi	r21, 0xFF	; 255
     850:	19 f0       	breq	.+6      	; 0x858 <__divsf3+0x18>
     852:	cc c0       	rjmp	.+408    	; 0x9ec <__fp_inf>
     854:	51 11       	cpse	r21, r1
     856:	15 c1       	rjmp	.+554    	; 0xa82 <__fp_szero>
     858:	cf c0       	rjmp	.+414    	; 0x9f8 <__fp_nan>

0000085a <__divsf3x>:
     85a:	f0 d0       	rcall	.+480    	; 0xa3c <__fp_split3>
     85c:	98 f3       	brcs	.-26     	; 0x844 <__divsf3+0x4>

0000085e <__divsf3_pse>:
     85e:	99 23       	and	r25, r25
     860:	c9 f3       	breq	.-14     	; 0x854 <__divsf3+0x14>
     862:	55 23       	and	r21, r21
     864:	b1 f3       	breq	.-20     	; 0x852 <__divsf3+0x12>
     866:	95 1b       	sub	r25, r21
     868:	55 0b       	sbc	r21, r21
     86a:	bb 27       	eor	r27, r27
     86c:	aa 27       	eor	r26, r26
     86e:	62 17       	cp	r22, r18
     870:	73 07       	cpc	r23, r19
     872:	84 07       	cpc	r24, r20
     874:	38 f0       	brcs	.+14     	; 0x884 <__divsf3_pse+0x26>
     876:	9f 5f       	subi	r25, 0xFF	; 255
     878:	5f 4f       	sbci	r21, 0xFF	; 255
     87a:	22 0f       	add	r18, r18
     87c:	33 1f       	adc	r19, r19
     87e:	44 1f       	adc	r20, r20
     880:	aa 1f       	adc	r26, r26
     882:	a9 f3       	breq	.-22     	; 0x86e <__divsf3_pse+0x10>
     884:	33 d0       	rcall	.+102    	; 0x8ec <__divsf3_pse+0x8e>
     886:	0e 2e       	mov	r0, r30
     888:	3a f0       	brmi	.+14     	; 0x898 <__divsf3_pse+0x3a>
     88a:	e0 e8       	ldi	r30, 0x80	; 128
     88c:	30 d0       	rcall	.+96     	; 0x8ee <__divsf3_pse+0x90>
     88e:	91 50       	subi	r25, 0x01	; 1
     890:	50 40       	sbci	r21, 0x00	; 0
     892:	e6 95       	lsr	r30
     894:	00 1c       	adc	r0, r0
     896:	ca f7       	brpl	.-14     	; 0x88a <__divsf3_pse+0x2c>
     898:	29 d0       	rcall	.+82     	; 0x8ec <__divsf3_pse+0x8e>
     89a:	fe 2f       	mov	r31, r30
     89c:	27 d0       	rcall	.+78     	; 0x8ec <__divsf3_pse+0x8e>
     89e:	66 0f       	add	r22, r22
     8a0:	77 1f       	adc	r23, r23
     8a2:	88 1f       	adc	r24, r24
     8a4:	bb 1f       	adc	r27, r27
     8a6:	26 17       	cp	r18, r22
     8a8:	37 07       	cpc	r19, r23
     8aa:	48 07       	cpc	r20, r24
     8ac:	ab 07       	cpc	r26, r27
     8ae:	b0 e8       	ldi	r27, 0x80	; 128
     8b0:	09 f0       	breq	.+2      	; 0x8b4 <__divsf3_pse+0x56>
     8b2:	bb 0b       	sbc	r27, r27
     8b4:	80 2d       	mov	r24, r0
     8b6:	bf 01       	movw	r22, r30
     8b8:	ff 27       	eor	r31, r31
     8ba:	93 58       	subi	r25, 0x83	; 131
     8bc:	5f 4f       	sbci	r21, 0xFF	; 255
     8be:	2a f0       	brmi	.+10     	; 0x8ca <__divsf3_pse+0x6c>
     8c0:	9e 3f       	cpi	r25, 0xFE	; 254
     8c2:	51 05       	cpc	r21, r1
     8c4:	68 f0       	brcs	.+26     	; 0x8e0 <__divsf3_pse+0x82>
     8c6:	92 c0       	rjmp	.+292    	; 0x9ec <__fp_inf>
     8c8:	dc c0       	rjmp	.+440    	; 0xa82 <__fp_szero>
     8ca:	5f 3f       	cpi	r21, 0xFF	; 255
     8cc:	ec f3       	brlt	.-6      	; 0x8c8 <__divsf3_pse+0x6a>
     8ce:	98 3e       	cpi	r25, 0xE8	; 232
     8d0:	dc f3       	brlt	.-10     	; 0x8c8 <__divsf3_pse+0x6a>
     8d2:	86 95       	lsr	r24
     8d4:	77 95       	ror	r23
     8d6:	67 95       	ror	r22
     8d8:	b7 95       	ror	r27
     8da:	f7 95       	ror	r31
     8dc:	9f 5f       	subi	r25, 0xFF	; 255
     8de:	c9 f7       	brne	.-14     	; 0x8d2 <__divsf3_pse+0x74>
     8e0:	88 0f       	add	r24, r24
     8e2:	91 1d       	adc	r25, r1
     8e4:	96 95       	lsr	r25
     8e6:	87 95       	ror	r24
     8e8:	97 f9       	bld	r25, 7
     8ea:	08 95       	ret
     8ec:	e1 e0       	ldi	r30, 0x01	; 1
     8ee:	66 0f       	add	r22, r22
     8f0:	77 1f       	adc	r23, r23
     8f2:	88 1f       	adc	r24, r24
     8f4:	bb 1f       	adc	r27, r27
     8f6:	62 17       	cp	r22, r18
     8f8:	73 07       	cpc	r23, r19
     8fa:	84 07       	cpc	r24, r20
     8fc:	ba 07       	cpc	r27, r26
     8fe:	20 f0       	brcs	.+8      	; 0x908 <__divsf3_pse+0xaa>
     900:	62 1b       	sub	r22, r18
     902:	73 0b       	sbc	r23, r19
     904:	84 0b       	sbc	r24, r20
     906:	ba 0b       	sbc	r27, r26
     908:	ee 1f       	adc	r30, r30
     90a:	88 f7       	brcc	.-30     	; 0x8ee <__divsf3_pse+0x90>
     90c:	e0 95       	com	r30
     90e:	08 95       	ret

00000910 <__fixsfsi>:
     910:	04 d0       	rcall	.+8      	; 0x91a <__fixunssfsi>
     912:	68 94       	set
     914:	b1 11       	cpse	r27, r1
     916:	b5 c0       	rjmp	.+362    	; 0xa82 <__fp_szero>
     918:	08 95       	ret

0000091a <__fixunssfsi>:
     91a:	98 d0       	rcall	.+304    	; 0xa4c <__fp_splitA>
     91c:	88 f0       	brcs	.+34     	; 0x940 <__fixunssfsi+0x26>
     91e:	9f 57       	subi	r25, 0x7F	; 127
     920:	90 f0       	brcs	.+36     	; 0x946 <__fixunssfsi+0x2c>
     922:	b9 2f       	mov	r27, r25
     924:	99 27       	eor	r25, r25
     926:	b7 51       	subi	r27, 0x17	; 23
     928:	a0 f0       	brcs	.+40     	; 0x952 <__fixunssfsi+0x38>
     92a:	d1 f0       	breq	.+52     	; 0x960 <__fixunssfsi+0x46>
     92c:	66 0f       	add	r22, r22
     92e:	77 1f       	adc	r23, r23
     930:	88 1f       	adc	r24, r24
     932:	99 1f       	adc	r25, r25
     934:	1a f0       	brmi	.+6      	; 0x93c <__fixunssfsi+0x22>
     936:	ba 95       	dec	r27
     938:	c9 f7       	brne	.-14     	; 0x92c <__fixunssfsi+0x12>
     93a:	12 c0       	rjmp	.+36     	; 0x960 <__fixunssfsi+0x46>
     93c:	b1 30       	cpi	r27, 0x01	; 1
     93e:	81 f0       	breq	.+32     	; 0x960 <__fixunssfsi+0x46>
     940:	9f d0       	rcall	.+318    	; 0xa80 <__fp_zero>
     942:	b1 e0       	ldi	r27, 0x01	; 1
     944:	08 95       	ret
     946:	9c c0       	rjmp	.+312    	; 0xa80 <__fp_zero>
     948:	67 2f       	mov	r22, r23
     94a:	78 2f       	mov	r23, r24
     94c:	88 27       	eor	r24, r24
     94e:	b8 5f       	subi	r27, 0xF8	; 248
     950:	39 f0       	breq	.+14     	; 0x960 <__fixunssfsi+0x46>
     952:	b9 3f       	cpi	r27, 0xF9	; 249
     954:	cc f3       	brlt	.-14     	; 0x948 <__fixunssfsi+0x2e>
     956:	86 95       	lsr	r24
     958:	77 95       	ror	r23
     95a:	67 95       	ror	r22
     95c:	b3 95       	inc	r27
     95e:	d9 f7       	brne	.-10     	; 0x956 <__fixunssfsi+0x3c>
     960:	3e f4       	brtc	.+14     	; 0x970 <__fixunssfsi+0x56>
     962:	90 95       	com	r25
     964:	80 95       	com	r24
     966:	70 95       	com	r23
     968:	61 95       	neg	r22
     96a:	7f 4f       	sbci	r23, 0xFF	; 255
     96c:	8f 4f       	sbci	r24, 0xFF	; 255
     96e:	9f 4f       	sbci	r25, 0xFF	; 255
     970:	08 95       	ret

00000972 <__floatunsisf>:
     972:	e8 94       	clt
     974:	09 c0       	rjmp	.+18     	; 0x988 <__floatsisf+0x12>

00000976 <__floatsisf>:
     976:	97 fb       	bst	r25, 7
     978:	3e f4       	brtc	.+14     	; 0x988 <__floatsisf+0x12>
     97a:	90 95       	com	r25
     97c:	80 95       	com	r24
     97e:	70 95       	com	r23
     980:	61 95       	neg	r22
     982:	7f 4f       	sbci	r23, 0xFF	; 255
     984:	8f 4f       	sbci	r24, 0xFF	; 255
     986:	9f 4f       	sbci	r25, 0xFF	; 255
     988:	99 23       	and	r25, r25
     98a:	a9 f0       	breq	.+42     	; 0x9b6 <__floatsisf+0x40>
     98c:	f9 2f       	mov	r31, r25
     98e:	96 e9       	ldi	r25, 0x96	; 150
     990:	bb 27       	eor	r27, r27
     992:	93 95       	inc	r25
     994:	f6 95       	lsr	r31
     996:	87 95       	ror	r24
     998:	77 95       	ror	r23
     99a:	67 95       	ror	r22
     99c:	b7 95       	ror	r27
     99e:	f1 11       	cpse	r31, r1
     9a0:	f8 cf       	rjmp	.-16     	; 0x992 <__floatsisf+0x1c>
     9a2:	fa f4       	brpl	.+62     	; 0x9e2 <__floatsisf+0x6c>
     9a4:	bb 0f       	add	r27, r27
     9a6:	11 f4       	brne	.+4      	; 0x9ac <__floatsisf+0x36>
     9a8:	60 ff       	sbrs	r22, 0
     9aa:	1b c0       	rjmp	.+54     	; 0x9e2 <__floatsisf+0x6c>
     9ac:	6f 5f       	subi	r22, 0xFF	; 255
     9ae:	7f 4f       	sbci	r23, 0xFF	; 255
     9b0:	8f 4f       	sbci	r24, 0xFF	; 255
     9b2:	9f 4f       	sbci	r25, 0xFF	; 255
     9b4:	16 c0       	rjmp	.+44     	; 0x9e2 <__floatsisf+0x6c>
     9b6:	88 23       	and	r24, r24
     9b8:	11 f0       	breq	.+4      	; 0x9be <__floatsisf+0x48>
     9ba:	96 e9       	ldi	r25, 0x96	; 150
     9bc:	11 c0       	rjmp	.+34     	; 0x9e0 <__floatsisf+0x6a>
     9be:	77 23       	and	r23, r23
     9c0:	21 f0       	breq	.+8      	; 0x9ca <__floatsisf+0x54>
     9c2:	9e e8       	ldi	r25, 0x8E	; 142
     9c4:	87 2f       	mov	r24, r23
     9c6:	76 2f       	mov	r23, r22
     9c8:	05 c0       	rjmp	.+10     	; 0x9d4 <__floatsisf+0x5e>
     9ca:	66 23       	and	r22, r22
     9cc:	71 f0       	breq	.+28     	; 0x9ea <__floatsisf+0x74>
     9ce:	96 e8       	ldi	r25, 0x86	; 134
     9d0:	86 2f       	mov	r24, r22
     9d2:	70 e0       	ldi	r23, 0x00	; 0
     9d4:	60 e0       	ldi	r22, 0x00	; 0
     9d6:	2a f0       	brmi	.+10     	; 0x9e2 <__floatsisf+0x6c>
     9d8:	9a 95       	dec	r25
     9da:	66 0f       	add	r22, r22
     9dc:	77 1f       	adc	r23, r23
     9de:	88 1f       	adc	r24, r24
     9e0:	da f7       	brpl	.-10     	; 0x9d8 <__floatsisf+0x62>
     9e2:	88 0f       	add	r24, r24
     9e4:	96 95       	lsr	r25
     9e6:	87 95       	ror	r24
     9e8:	97 f9       	bld	r25, 7
     9ea:	08 95       	ret

000009ec <__fp_inf>:
     9ec:	97 f9       	bld	r25, 7
     9ee:	9f 67       	ori	r25, 0x7F	; 127
     9f0:	80 e8       	ldi	r24, 0x80	; 128
     9f2:	70 e0       	ldi	r23, 0x00	; 0
     9f4:	60 e0       	ldi	r22, 0x00	; 0
     9f6:	08 95       	ret

000009f8 <__fp_nan>:
     9f8:	9f ef       	ldi	r25, 0xFF	; 255
     9fa:	80 ec       	ldi	r24, 0xC0	; 192
     9fc:	08 95       	ret

000009fe <__fp_pscA>:
     9fe:	00 24       	eor	r0, r0
     a00:	0a 94       	dec	r0
     a02:	16 16       	cp	r1, r22
     a04:	17 06       	cpc	r1, r23
     a06:	18 06       	cpc	r1, r24
     a08:	09 06       	cpc	r0, r25
     a0a:	08 95       	ret

00000a0c <__fp_pscB>:
     a0c:	00 24       	eor	r0, r0
     a0e:	0a 94       	dec	r0
     a10:	12 16       	cp	r1, r18
     a12:	13 06       	cpc	r1, r19
     a14:	14 06       	cpc	r1, r20
     a16:	05 06       	cpc	r0, r21
     a18:	08 95       	ret

00000a1a <__fp_round>:
     a1a:	09 2e       	mov	r0, r25
     a1c:	03 94       	inc	r0
     a1e:	00 0c       	add	r0, r0
     a20:	11 f4       	brne	.+4      	; 0xa26 <__fp_round+0xc>
     a22:	88 23       	and	r24, r24
     a24:	52 f0       	brmi	.+20     	; 0xa3a <__fp_round+0x20>
     a26:	bb 0f       	add	r27, r27
     a28:	40 f4       	brcc	.+16     	; 0xa3a <__fp_round+0x20>
     a2a:	bf 2b       	or	r27, r31
     a2c:	11 f4       	brne	.+4      	; 0xa32 <__fp_round+0x18>
     a2e:	60 ff       	sbrs	r22, 0
     a30:	04 c0       	rjmp	.+8      	; 0xa3a <__fp_round+0x20>
     a32:	6f 5f       	subi	r22, 0xFF	; 255
     a34:	7f 4f       	sbci	r23, 0xFF	; 255
     a36:	8f 4f       	sbci	r24, 0xFF	; 255
     a38:	9f 4f       	sbci	r25, 0xFF	; 255
     a3a:	08 95       	ret

00000a3c <__fp_split3>:
     a3c:	57 fd       	sbrc	r21, 7
     a3e:	90 58       	subi	r25, 0x80	; 128
     a40:	44 0f       	add	r20, r20
     a42:	55 1f       	adc	r21, r21
     a44:	59 f0       	breq	.+22     	; 0xa5c <__fp_splitA+0x10>
     a46:	5f 3f       	cpi	r21, 0xFF	; 255
     a48:	71 f0       	breq	.+28     	; 0xa66 <__fp_splitA+0x1a>
     a4a:	47 95       	ror	r20

00000a4c <__fp_splitA>:
     a4c:	88 0f       	add	r24, r24
     a4e:	97 fb       	bst	r25, 7
     a50:	99 1f       	adc	r25, r25
     a52:	61 f0       	breq	.+24     	; 0xa6c <__fp_splitA+0x20>
     a54:	9f 3f       	cpi	r25, 0xFF	; 255
     a56:	79 f0       	breq	.+30     	; 0xa76 <__fp_splitA+0x2a>
     a58:	87 95       	ror	r24
     a5a:	08 95       	ret
     a5c:	12 16       	cp	r1, r18
     a5e:	13 06       	cpc	r1, r19
     a60:	14 06       	cpc	r1, r20
     a62:	55 1f       	adc	r21, r21
     a64:	f2 cf       	rjmp	.-28     	; 0xa4a <__fp_split3+0xe>
     a66:	46 95       	lsr	r20
     a68:	f1 df       	rcall	.-30     	; 0xa4c <__fp_splitA>
     a6a:	08 c0       	rjmp	.+16     	; 0xa7c <__fp_splitA+0x30>
     a6c:	16 16       	cp	r1, r22
     a6e:	17 06       	cpc	r1, r23
     a70:	18 06       	cpc	r1, r24
     a72:	99 1f       	adc	r25, r25
     a74:	f1 cf       	rjmp	.-30     	; 0xa58 <__fp_splitA+0xc>
     a76:	86 95       	lsr	r24
     a78:	71 05       	cpc	r23, r1
     a7a:	61 05       	cpc	r22, r1
     a7c:	08 94       	sec
     a7e:	08 95       	ret

00000a80 <__fp_zero>:
     a80:	e8 94       	clt

00000a82 <__fp_szero>:
     a82:	bb 27       	eor	r27, r27
     a84:	66 27       	eor	r22, r22
     a86:	77 27       	eor	r23, r23
     a88:	cb 01       	movw	r24, r22
     a8a:	97 f9       	bld	r25, 7
     a8c:	08 95       	ret

00000a8e <__mulsf3>:
     a8e:	0b d0       	rcall	.+22     	; 0xaa6 <__mulsf3x>
     a90:	c4 cf       	rjmp	.-120    	; 0xa1a <__fp_round>
     a92:	b5 df       	rcall	.-150    	; 0x9fe <__fp_pscA>
     a94:	28 f0       	brcs	.+10     	; 0xaa0 <__mulsf3+0x12>
     a96:	ba df       	rcall	.-140    	; 0xa0c <__fp_pscB>
     a98:	18 f0       	brcs	.+6      	; 0xaa0 <__mulsf3+0x12>
     a9a:	95 23       	and	r25, r21
     a9c:	09 f0       	breq	.+2      	; 0xaa0 <__mulsf3+0x12>
     a9e:	a6 cf       	rjmp	.-180    	; 0x9ec <__fp_inf>
     aa0:	ab cf       	rjmp	.-170    	; 0x9f8 <__fp_nan>
     aa2:	11 24       	eor	r1, r1
     aa4:	ee cf       	rjmp	.-36     	; 0xa82 <__fp_szero>

00000aa6 <__mulsf3x>:
     aa6:	ca df       	rcall	.-108    	; 0xa3c <__fp_split3>
     aa8:	a0 f3       	brcs	.-24     	; 0xa92 <__mulsf3+0x4>

00000aaa <__mulsf3_pse>:
     aaa:	95 9f       	mul	r25, r21
     aac:	d1 f3       	breq	.-12     	; 0xaa2 <__mulsf3+0x14>
     aae:	95 0f       	add	r25, r21
     ab0:	50 e0       	ldi	r21, 0x00	; 0
     ab2:	55 1f       	adc	r21, r21
     ab4:	62 9f       	mul	r22, r18
     ab6:	f0 01       	movw	r30, r0
     ab8:	72 9f       	mul	r23, r18
     aba:	bb 27       	eor	r27, r27
     abc:	f0 0d       	add	r31, r0
     abe:	b1 1d       	adc	r27, r1
     ac0:	63 9f       	mul	r22, r19
     ac2:	aa 27       	eor	r26, r26
     ac4:	f0 0d       	add	r31, r0
     ac6:	b1 1d       	adc	r27, r1
     ac8:	aa 1f       	adc	r26, r26
     aca:	64 9f       	mul	r22, r20
     acc:	66 27       	eor	r22, r22
     ace:	b0 0d       	add	r27, r0
     ad0:	a1 1d       	adc	r26, r1
     ad2:	66 1f       	adc	r22, r22
     ad4:	82 9f       	mul	r24, r18
     ad6:	22 27       	eor	r18, r18
     ad8:	b0 0d       	add	r27, r0
     ada:	a1 1d       	adc	r26, r1
     adc:	62 1f       	adc	r22, r18
     ade:	73 9f       	mul	r23, r19
     ae0:	b0 0d       	add	r27, r0
     ae2:	a1 1d       	adc	r26, r1
     ae4:	62 1f       	adc	r22, r18
     ae6:	83 9f       	mul	r24, r19
     ae8:	a0 0d       	add	r26, r0
     aea:	61 1d       	adc	r22, r1
     aec:	22 1f       	adc	r18, r18
     aee:	74 9f       	mul	r23, r20
     af0:	33 27       	eor	r19, r19
     af2:	a0 0d       	add	r26, r0
     af4:	61 1d       	adc	r22, r1
     af6:	23 1f       	adc	r18, r19
     af8:	84 9f       	mul	r24, r20
     afa:	60 0d       	add	r22, r0
     afc:	21 1d       	adc	r18, r1
     afe:	82 2f       	mov	r24, r18
     b00:	76 2f       	mov	r23, r22
     b02:	6a 2f       	mov	r22, r26
     b04:	11 24       	eor	r1, r1
     b06:	9f 57       	subi	r25, 0x7F	; 127
     b08:	50 40       	sbci	r21, 0x00	; 0
     b0a:	8a f0       	brmi	.+34     	; 0xb2e <__mulsf3_pse+0x84>
     b0c:	e1 f0       	breq	.+56     	; 0xb46 <__mulsf3_pse+0x9c>
     b0e:	88 23       	and	r24, r24
     b10:	4a f0       	brmi	.+18     	; 0xb24 <__mulsf3_pse+0x7a>
     b12:	ee 0f       	add	r30, r30
     b14:	ff 1f       	adc	r31, r31
     b16:	bb 1f       	adc	r27, r27
     b18:	66 1f       	adc	r22, r22
     b1a:	77 1f       	adc	r23, r23
     b1c:	88 1f       	adc	r24, r24
     b1e:	91 50       	subi	r25, 0x01	; 1
     b20:	50 40       	sbci	r21, 0x00	; 0
     b22:	a9 f7       	brne	.-22     	; 0xb0e <__mulsf3_pse+0x64>
     b24:	9e 3f       	cpi	r25, 0xFE	; 254
     b26:	51 05       	cpc	r21, r1
     b28:	70 f0       	brcs	.+28     	; 0xb46 <__mulsf3_pse+0x9c>
     b2a:	60 cf       	rjmp	.-320    	; 0x9ec <__fp_inf>
     b2c:	aa cf       	rjmp	.-172    	; 0xa82 <__fp_szero>
     b2e:	5f 3f       	cpi	r21, 0xFF	; 255
     b30:	ec f3       	brlt	.-6      	; 0xb2c <__mulsf3_pse+0x82>
     b32:	98 3e       	cpi	r25, 0xE8	; 232
     b34:	dc f3       	brlt	.-10     	; 0xb2c <__mulsf3_pse+0x82>
     b36:	86 95       	lsr	r24
     b38:	77 95       	ror	r23
     b3a:	67 95       	ror	r22
     b3c:	b7 95       	ror	r27
     b3e:	f7 95       	ror	r31
     b40:	e7 95       	ror	r30
     b42:	9f 5f       	subi	r25, 0xFF	; 255
     b44:	c1 f7       	brne	.-16     	; 0xb36 <__mulsf3_pse+0x8c>
     b46:	fe 2b       	or	r31, r30
     b48:	88 0f       	add	r24, r24
     b4a:	91 1d       	adc	r25, r1
     b4c:	96 95       	lsr	r25
     b4e:	87 95       	ror	r24
     b50:	97 f9       	bld	r25, 7
     b52:	08 95       	ret

00000b54 <dtostrf>:
     b54:	ef 92       	push	r14
     b56:	ff 92       	push	r15
     b58:	0f 93       	push	r16
     b5a:	1f 93       	push	r17
     b5c:	f2 2f       	mov	r31, r18
     b5e:	f0 2e       	mov	r15, r16
     b60:	47 fd       	sbrc	r20, 7
     b62:	02 c0       	rjmp	.+4      	; 0xb68 <dtostrf+0x14>
     b64:	e4 e0       	ldi	r30, 0x04	; 4
     b66:	01 c0       	rjmp	.+2      	; 0xb6a <dtostrf+0x16>
     b68:	e4 e1       	ldi	r30, 0x14	; 20
     b6a:	24 2f       	mov	r18, r20
     b6c:	33 27       	eor	r19, r19
     b6e:	27 fd       	sbrc	r18, 7
     b70:	30 95       	com	r19
     b72:	37 ff       	sbrs	r19, 7
     b74:	03 c0       	rjmp	.+6      	; 0xb7c <dtostrf+0x28>
     b76:	30 95       	com	r19
     b78:	21 95       	neg	r18
     b7a:	3f 4f       	sbci	r19, 0xFF	; 255
     b7c:	4f 2d       	mov	r20, r15
     b7e:	51 2f       	mov	r21, r17
     b80:	0f 2f       	mov	r16, r31
     b82:	ee 2e       	mov	r14, r30
     b84:	e7 d1       	rcall	.+974    	; 0xf54 <dtoa_prf>
     b86:	8f 2d       	mov	r24, r15
     b88:	91 2f       	mov	r25, r17
     b8a:	1f 91       	pop	r17
     b8c:	0f 91       	pop	r16
     b8e:	ff 90       	pop	r15
     b90:	ef 90       	pop	r14
     b92:	08 95       	ret

00000b94 <strcat>:
     b94:	fb 01       	movw	r30, r22
     b96:	dc 01       	movw	r26, r24
     b98:	0d 90       	ld	r0, X+
     b9a:	00 20       	and	r0, r0
     b9c:	e9 f7       	brne	.-6      	; 0xb98 <strcat+0x4>
     b9e:	11 97       	sbiw	r26, 0x01	; 1
     ba0:	01 90       	ld	r0, Z+
     ba2:	0d 92       	st	X+, r0
     ba4:	00 20       	and	r0, r0
     ba6:	e1 f7       	brne	.-8      	; 0xba0 <strcat+0xc>
     ba8:	08 95       	ret

00000baa <strcpy>:
     baa:	fb 01       	movw	r30, r22
     bac:	dc 01       	movw	r26, r24
     bae:	01 90       	ld	r0, Z+
     bb0:	0d 92       	st	X+, r0
     bb2:	00 20       	and	r0, r0
     bb4:	e1 f7       	brne	.-8      	; 0xbae <strcpy+0x4>
     bb6:	08 95       	ret

00000bb8 <vfprintf>:
     bb8:	ab e0       	ldi	r26, 0x0B	; 11
     bba:	b0 e0       	ldi	r27, 0x00	; 0
     bbc:	e1 ee       	ldi	r30, 0xE1	; 225
     bbe:	f5 e0       	ldi	r31, 0x05	; 5
     bc0:	a0 c4       	rjmp	.+2368   	; 0x1502 <__prologue_saves__>
     bc2:	3c 01       	movw	r6, r24
     bc4:	2b 01       	movw	r4, r22
     bc6:	5a 01       	movw	r10, r20
     bc8:	fc 01       	movw	r30, r24
     bca:	17 82       	std	Z+7, r1	; 0x07
     bcc:	16 82       	std	Z+6, r1	; 0x06
     bce:	83 81       	ldd	r24, Z+3	; 0x03
     bd0:	81 fd       	sbrc	r24, 1
     bd2:	03 c0       	rjmp	.+6      	; 0xbda <vfprintf+0x22>
     bd4:	6f ef       	ldi	r22, 0xFF	; 255
     bd6:	7f ef       	ldi	r23, 0xFF	; 255
     bd8:	b9 c1       	rjmp	.+882    	; 0xf4c <vfprintf+0x394>
     bda:	9a e0       	ldi	r25, 0x0A	; 10
     bdc:	89 2e       	mov	r8, r25
     bde:	1e 01       	movw	r2, r28
     be0:	08 94       	sec
     be2:	21 1c       	adc	r2, r1
     be4:	31 1c       	adc	r3, r1
     be6:	f3 01       	movw	r30, r6
     be8:	23 81       	ldd	r18, Z+3	; 0x03
     bea:	f2 01       	movw	r30, r4
     bec:	23 fd       	sbrc	r18, 3
     bee:	85 91       	lpm	r24, Z+
     bf0:	23 ff       	sbrs	r18, 3
     bf2:	81 91       	ld	r24, Z+
     bf4:	2f 01       	movw	r4, r30
     bf6:	88 23       	and	r24, r24
     bf8:	09 f4       	brne	.+2      	; 0xbfc <vfprintf+0x44>
     bfa:	a5 c1       	rjmp	.+842    	; 0xf46 <vfprintf+0x38e>
     bfc:	85 32       	cpi	r24, 0x25	; 37
     bfe:	39 f4       	brne	.+14     	; 0xc0e <vfprintf+0x56>
     c00:	23 fd       	sbrc	r18, 3
     c02:	85 91       	lpm	r24, Z+
     c04:	23 ff       	sbrs	r18, 3
     c06:	81 91       	ld	r24, Z+
     c08:	2f 01       	movw	r4, r30
     c0a:	85 32       	cpi	r24, 0x25	; 37
     c0c:	21 f4       	brne	.+8      	; 0xc16 <vfprintf+0x5e>
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	b3 01       	movw	r22, r6
     c12:	ed d3       	rcall	.+2010   	; 0x13ee <fputc>
     c14:	e8 cf       	rjmp	.-48     	; 0xbe6 <vfprintf+0x2e>
     c16:	98 2f       	mov	r25, r24
     c18:	ff 24       	eor	r15, r15
     c1a:	ee 24       	eor	r14, r14
     c1c:	99 24       	eor	r9, r9
     c1e:	ff e1       	ldi	r31, 0x1F	; 31
     c20:	ff 15       	cp	r31, r15
     c22:	d0 f0       	brcs	.+52     	; 0xc58 <vfprintf+0xa0>
     c24:	9b 32       	cpi	r25, 0x2B	; 43
     c26:	69 f0       	breq	.+26     	; 0xc42 <vfprintf+0x8a>
     c28:	9c 32       	cpi	r25, 0x2C	; 44
     c2a:	28 f4       	brcc	.+10     	; 0xc36 <vfprintf+0x7e>
     c2c:	90 32       	cpi	r25, 0x20	; 32
     c2e:	59 f0       	breq	.+22     	; 0xc46 <vfprintf+0x8e>
     c30:	93 32       	cpi	r25, 0x23	; 35
     c32:	91 f4       	brne	.+36     	; 0xc58 <vfprintf+0xa0>
     c34:	0e c0       	rjmp	.+28     	; 0xc52 <vfprintf+0x9a>
     c36:	9d 32       	cpi	r25, 0x2D	; 45
     c38:	49 f0       	breq	.+18     	; 0xc4c <vfprintf+0x94>
     c3a:	90 33       	cpi	r25, 0x30	; 48
     c3c:	69 f4       	brne	.+26     	; 0xc58 <vfprintf+0xa0>
     c3e:	41 e0       	ldi	r20, 0x01	; 1
     c40:	24 c0       	rjmp	.+72     	; 0xc8a <vfprintf+0xd2>
     c42:	52 e0       	ldi	r21, 0x02	; 2
     c44:	f5 2a       	or	r15, r21
     c46:	84 e0       	ldi	r24, 0x04	; 4
     c48:	f8 2a       	or	r15, r24
     c4a:	28 c0       	rjmp	.+80     	; 0xc9c <vfprintf+0xe4>
     c4c:	98 e0       	ldi	r25, 0x08	; 8
     c4e:	f9 2a       	or	r15, r25
     c50:	25 c0       	rjmp	.+74     	; 0xc9c <vfprintf+0xe4>
     c52:	e0 e1       	ldi	r30, 0x10	; 16
     c54:	fe 2a       	or	r15, r30
     c56:	22 c0       	rjmp	.+68     	; 0xc9c <vfprintf+0xe4>
     c58:	f7 fc       	sbrc	r15, 7
     c5a:	29 c0       	rjmp	.+82     	; 0xcae <vfprintf+0xf6>
     c5c:	89 2f       	mov	r24, r25
     c5e:	80 53       	subi	r24, 0x30	; 48
     c60:	8a 30       	cpi	r24, 0x0A	; 10
     c62:	70 f4       	brcc	.+28     	; 0xc80 <vfprintf+0xc8>
     c64:	f6 fe       	sbrs	r15, 6
     c66:	05 c0       	rjmp	.+10     	; 0xc72 <vfprintf+0xba>
     c68:	98 9c       	mul	r9, r8
     c6a:	90 2c       	mov	r9, r0
     c6c:	11 24       	eor	r1, r1
     c6e:	98 0e       	add	r9, r24
     c70:	15 c0       	rjmp	.+42     	; 0xc9c <vfprintf+0xe4>
     c72:	e8 9c       	mul	r14, r8
     c74:	e0 2c       	mov	r14, r0
     c76:	11 24       	eor	r1, r1
     c78:	e8 0e       	add	r14, r24
     c7a:	f0 e2       	ldi	r31, 0x20	; 32
     c7c:	ff 2a       	or	r15, r31
     c7e:	0e c0       	rjmp	.+28     	; 0xc9c <vfprintf+0xe4>
     c80:	9e 32       	cpi	r25, 0x2E	; 46
     c82:	29 f4       	brne	.+10     	; 0xc8e <vfprintf+0xd6>
     c84:	f6 fc       	sbrc	r15, 6
     c86:	5f c1       	rjmp	.+702    	; 0xf46 <vfprintf+0x38e>
     c88:	40 e4       	ldi	r20, 0x40	; 64
     c8a:	f4 2a       	or	r15, r20
     c8c:	07 c0       	rjmp	.+14     	; 0xc9c <vfprintf+0xe4>
     c8e:	9c 36       	cpi	r25, 0x6C	; 108
     c90:	19 f4       	brne	.+6      	; 0xc98 <vfprintf+0xe0>
     c92:	50 e8       	ldi	r21, 0x80	; 128
     c94:	f5 2a       	or	r15, r21
     c96:	02 c0       	rjmp	.+4      	; 0xc9c <vfprintf+0xe4>
     c98:	98 36       	cpi	r25, 0x68	; 104
     c9a:	49 f4       	brne	.+18     	; 0xcae <vfprintf+0xf6>
     c9c:	f2 01       	movw	r30, r4
     c9e:	23 fd       	sbrc	r18, 3
     ca0:	95 91       	lpm	r25, Z+
     ca2:	23 ff       	sbrs	r18, 3
     ca4:	91 91       	ld	r25, Z+
     ca6:	2f 01       	movw	r4, r30
     ca8:	99 23       	and	r25, r25
     caa:	09 f0       	breq	.+2      	; 0xcae <vfprintf+0xf6>
     cac:	b8 cf       	rjmp	.-144    	; 0xc1e <vfprintf+0x66>
     cae:	89 2f       	mov	r24, r25
     cb0:	85 54       	subi	r24, 0x45	; 69
     cb2:	83 30       	cpi	r24, 0x03	; 3
     cb4:	18 f0       	brcs	.+6      	; 0xcbc <vfprintf+0x104>
     cb6:	80 52       	subi	r24, 0x20	; 32
     cb8:	83 30       	cpi	r24, 0x03	; 3
     cba:	38 f4       	brcc	.+14     	; 0xcca <vfprintf+0x112>
     cbc:	44 e0       	ldi	r20, 0x04	; 4
     cbe:	50 e0       	ldi	r21, 0x00	; 0
     cc0:	a4 0e       	add	r10, r20
     cc2:	b5 1e       	adc	r11, r21
     cc4:	5f e3       	ldi	r21, 0x3F	; 63
     cc6:	59 83       	std	Y+1, r21	; 0x01
     cc8:	0f c0       	rjmp	.+30     	; 0xce8 <vfprintf+0x130>
     cca:	93 36       	cpi	r25, 0x63	; 99
     ccc:	31 f0       	breq	.+12     	; 0xcda <vfprintf+0x122>
     cce:	93 37       	cpi	r25, 0x73	; 115
     cd0:	79 f0       	breq	.+30     	; 0xcf0 <vfprintf+0x138>
     cd2:	93 35       	cpi	r25, 0x53	; 83
     cd4:	09 f0       	breq	.+2      	; 0xcd8 <vfprintf+0x120>
     cd6:	52 c0       	rjmp	.+164    	; 0xd7c <vfprintf+0x1c4>
     cd8:	1f c0       	rjmp	.+62     	; 0xd18 <vfprintf+0x160>
     cda:	f5 01       	movw	r30, r10
     cdc:	80 81       	ld	r24, Z
     cde:	89 83       	std	Y+1, r24	; 0x01
     ce0:	42 e0       	ldi	r20, 0x02	; 2
     ce2:	50 e0       	ldi	r21, 0x00	; 0
     ce4:	a4 0e       	add	r10, r20
     ce6:	b5 1e       	adc	r11, r21
     ce8:	61 01       	movw	r12, r2
     cea:	01 e0       	ldi	r16, 0x01	; 1
     cec:	10 e0       	ldi	r17, 0x00	; 0
     cee:	11 c0       	rjmp	.+34     	; 0xd12 <vfprintf+0x15a>
     cf0:	f5 01       	movw	r30, r10
     cf2:	c0 80       	ld	r12, Z
     cf4:	d1 80       	ldd	r13, Z+1	; 0x01
     cf6:	f6 fc       	sbrc	r15, 6
     cf8:	03 c0       	rjmp	.+6      	; 0xd00 <vfprintf+0x148>
     cfa:	6f ef       	ldi	r22, 0xFF	; 255
     cfc:	7f ef       	ldi	r23, 0xFF	; 255
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <vfprintf+0x14c>
     d00:	69 2d       	mov	r22, r9
     d02:	70 e0       	ldi	r23, 0x00	; 0
     d04:	42 e0       	ldi	r20, 0x02	; 2
     d06:	50 e0       	ldi	r21, 0x00	; 0
     d08:	a4 0e       	add	r10, r20
     d0a:	b5 1e       	adc	r11, r21
     d0c:	c6 01       	movw	r24, r12
     d0e:	64 d3       	rcall	.+1736   	; 0x13d8 <strnlen>
     d10:	8c 01       	movw	r16, r24
     d12:	5f e7       	ldi	r21, 0x7F	; 127
     d14:	f5 22       	and	r15, r21
     d16:	13 c0       	rjmp	.+38     	; 0xd3e <vfprintf+0x186>
     d18:	f5 01       	movw	r30, r10
     d1a:	c0 80       	ld	r12, Z
     d1c:	d1 80       	ldd	r13, Z+1	; 0x01
     d1e:	f6 fc       	sbrc	r15, 6
     d20:	03 c0       	rjmp	.+6      	; 0xd28 <vfprintf+0x170>
     d22:	6f ef       	ldi	r22, 0xFF	; 255
     d24:	7f ef       	ldi	r23, 0xFF	; 255
     d26:	02 c0       	rjmp	.+4      	; 0xd2c <vfprintf+0x174>
     d28:	69 2d       	mov	r22, r9
     d2a:	70 e0       	ldi	r23, 0x00	; 0
     d2c:	42 e0       	ldi	r20, 0x02	; 2
     d2e:	50 e0       	ldi	r21, 0x00	; 0
     d30:	a4 0e       	add	r10, r20
     d32:	b5 1e       	adc	r11, r21
     d34:	c6 01       	movw	r24, r12
     d36:	45 d3       	rcall	.+1674   	; 0x13c2 <strnlen_P>
     d38:	8c 01       	movw	r16, r24
     d3a:	50 e8       	ldi	r21, 0x80	; 128
     d3c:	f5 2a       	or	r15, r21
     d3e:	f3 fe       	sbrs	r15, 3
     d40:	06 c0       	rjmp	.+12     	; 0xd4e <vfprintf+0x196>
     d42:	18 c0       	rjmp	.+48     	; 0xd74 <vfprintf+0x1bc>
     d44:	80 e2       	ldi	r24, 0x20	; 32
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	b3 01       	movw	r22, r6
     d4a:	51 d3       	rcall	.+1698   	; 0x13ee <fputc>
     d4c:	ea 94       	dec	r14
     d4e:	8e 2d       	mov	r24, r14
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	08 17       	cp	r16, r24
     d54:	19 07       	cpc	r17, r25
     d56:	b0 f3       	brcs	.-20     	; 0xd44 <vfprintf+0x18c>
     d58:	0d c0       	rjmp	.+26     	; 0xd74 <vfprintf+0x1bc>
     d5a:	f6 01       	movw	r30, r12
     d5c:	f7 fc       	sbrc	r15, 7
     d5e:	85 91       	lpm	r24, Z+
     d60:	f7 fe       	sbrs	r15, 7
     d62:	81 91       	ld	r24, Z+
     d64:	6f 01       	movw	r12, r30
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	b3 01       	movw	r22, r6
     d6a:	41 d3       	rcall	.+1666   	; 0x13ee <fputc>
     d6c:	e1 10       	cpse	r14, r1
     d6e:	ea 94       	dec	r14
     d70:	01 50       	subi	r16, 0x01	; 1
     d72:	10 40       	sbci	r17, 0x00	; 0
     d74:	01 15       	cp	r16, r1
     d76:	11 05       	cpc	r17, r1
     d78:	81 f7       	brne	.-32     	; 0xd5a <vfprintf+0x1a2>
     d7a:	e2 c0       	rjmp	.+452    	; 0xf40 <vfprintf+0x388>
     d7c:	94 36       	cpi	r25, 0x64	; 100
     d7e:	11 f0       	breq	.+4      	; 0xd84 <vfprintf+0x1cc>
     d80:	99 36       	cpi	r25, 0x69	; 105
     d82:	61 f5       	brne	.+88     	; 0xddc <vfprintf+0x224>
     d84:	f7 fe       	sbrs	r15, 7
     d86:	08 c0       	rjmp	.+16     	; 0xd98 <vfprintf+0x1e0>
     d88:	f5 01       	movw	r30, r10
     d8a:	20 81       	ld	r18, Z
     d8c:	31 81       	ldd	r19, Z+1	; 0x01
     d8e:	42 81       	ldd	r20, Z+2	; 0x02
     d90:	53 81       	ldd	r21, Z+3	; 0x03
     d92:	84 e0       	ldi	r24, 0x04	; 4
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	0a c0       	rjmp	.+20     	; 0xdac <vfprintf+0x1f4>
     d98:	f5 01       	movw	r30, r10
     d9a:	80 81       	ld	r24, Z
     d9c:	91 81       	ldd	r25, Z+1	; 0x01
     d9e:	9c 01       	movw	r18, r24
     da0:	44 27       	eor	r20, r20
     da2:	37 fd       	sbrc	r19, 7
     da4:	40 95       	com	r20
     da6:	54 2f       	mov	r21, r20
     da8:	82 e0       	ldi	r24, 0x02	; 2
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	a8 0e       	add	r10, r24
     dae:	b9 1e       	adc	r11, r25
     db0:	9f e6       	ldi	r25, 0x6F	; 111
     db2:	f9 22       	and	r15, r25
     db4:	57 ff       	sbrs	r21, 7
     db6:	09 c0       	rjmp	.+18     	; 0xdca <vfprintf+0x212>
     db8:	50 95       	com	r21
     dba:	40 95       	com	r20
     dbc:	30 95       	com	r19
     dbe:	21 95       	neg	r18
     dc0:	3f 4f       	sbci	r19, 0xFF	; 255
     dc2:	4f 4f       	sbci	r20, 0xFF	; 255
     dc4:	5f 4f       	sbci	r21, 0xFF	; 255
     dc6:	e0 e8       	ldi	r30, 0x80	; 128
     dc8:	fe 2a       	or	r15, r30
     dca:	ca 01       	movw	r24, r20
     dcc:	b9 01       	movw	r22, r18
     dce:	a1 01       	movw	r20, r2
     dd0:	2a e0       	ldi	r18, 0x0A	; 10
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	38 d3       	rcall	.+1648   	; 0x1446 <__ultoa_invert>
     dd6:	d8 2e       	mov	r13, r24
     dd8:	d2 18       	sub	r13, r2
     dda:	3f c0       	rjmp	.+126    	; 0xe5a <vfprintf+0x2a2>
     ddc:	95 37       	cpi	r25, 0x75	; 117
     dde:	29 f4       	brne	.+10     	; 0xdea <vfprintf+0x232>
     de0:	1f 2d       	mov	r17, r15
     de2:	1f 7e       	andi	r17, 0xEF	; 239
     de4:	2a e0       	ldi	r18, 0x0A	; 10
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	1d c0       	rjmp	.+58     	; 0xe24 <vfprintf+0x26c>
     dea:	1f 2d       	mov	r17, r15
     dec:	19 7f       	andi	r17, 0xF9	; 249
     dee:	9f 36       	cpi	r25, 0x6F	; 111
     df0:	61 f0       	breq	.+24     	; 0xe0a <vfprintf+0x252>
     df2:	90 37       	cpi	r25, 0x70	; 112
     df4:	20 f4       	brcc	.+8      	; 0xdfe <vfprintf+0x246>
     df6:	98 35       	cpi	r25, 0x58	; 88
     df8:	09 f0       	breq	.+2      	; 0xdfc <vfprintf+0x244>
     dfa:	a5 c0       	rjmp	.+330    	; 0xf46 <vfprintf+0x38e>
     dfc:	0f c0       	rjmp	.+30     	; 0xe1c <vfprintf+0x264>
     dfe:	90 37       	cpi	r25, 0x70	; 112
     e00:	39 f0       	breq	.+14     	; 0xe10 <vfprintf+0x258>
     e02:	98 37       	cpi	r25, 0x78	; 120
     e04:	09 f0       	breq	.+2      	; 0xe08 <vfprintf+0x250>
     e06:	9f c0       	rjmp	.+318    	; 0xf46 <vfprintf+0x38e>
     e08:	04 c0       	rjmp	.+8      	; 0xe12 <vfprintf+0x25a>
     e0a:	28 e0       	ldi	r18, 0x08	; 8
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	0a c0       	rjmp	.+20     	; 0xe24 <vfprintf+0x26c>
     e10:	10 61       	ori	r17, 0x10	; 16
     e12:	14 fd       	sbrc	r17, 4
     e14:	14 60       	ori	r17, 0x04	; 4
     e16:	20 e1       	ldi	r18, 0x10	; 16
     e18:	30 e0       	ldi	r19, 0x00	; 0
     e1a:	04 c0       	rjmp	.+8      	; 0xe24 <vfprintf+0x26c>
     e1c:	14 fd       	sbrc	r17, 4
     e1e:	16 60       	ori	r17, 0x06	; 6
     e20:	20 e1       	ldi	r18, 0x10	; 16
     e22:	32 e0       	ldi	r19, 0x02	; 2
     e24:	17 ff       	sbrs	r17, 7
     e26:	08 c0       	rjmp	.+16     	; 0xe38 <vfprintf+0x280>
     e28:	f5 01       	movw	r30, r10
     e2a:	60 81       	ld	r22, Z
     e2c:	71 81       	ldd	r23, Z+1	; 0x01
     e2e:	82 81       	ldd	r24, Z+2	; 0x02
     e30:	93 81       	ldd	r25, Z+3	; 0x03
     e32:	44 e0       	ldi	r20, 0x04	; 4
     e34:	50 e0       	ldi	r21, 0x00	; 0
     e36:	08 c0       	rjmp	.+16     	; 0xe48 <vfprintf+0x290>
     e38:	f5 01       	movw	r30, r10
     e3a:	80 81       	ld	r24, Z
     e3c:	91 81       	ldd	r25, Z+1	; 0x01
     e3e:	bc 01       	movw	r22, r24
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	42 e0       	ldi	r20, 0x02	; 2
     e46:	50 e0       	ldi	r21, 0x00	; 0
     e48:	a4 0e       	add	r10, r20
     e4a:	b5 1e       	adc	r11, r21
     e4c:	a1 01       	movw	r20, r2
     e4e:	fb d2       	rcall	.+1526   	; 0x1446 <__ultoa_invert>
     e50:	d8 2e       	mov	r13, r24
     e52:	d2 18       	sub	r13, r2
     e54:	8f e7       	ldi	r24, 0x7F	; 127
     e56:	f8 2e       	mov	r15, r24
     e58:	f1 22       	and	r15, r17
     e5a:	f6 fe       	sbrs	r15, 6
     e5c:	0b c0       	rjmp	.+22     	; 0xe74 <vfprintf+0x2bc>
     e5e:	5e ef       	ldi	r21, 0xFE	; 254
     e60:	f5 22       	and	r15, r21
     e62:	d9 14       	cp	r13, r9
     e64:	38 f4       	brcc	.+14     	; 0xe74 <vfprintf+0x2bc>
     e66:	f4 fe       	sbrs	r15, 4
     e68:	07 c0       	rjmp	.+14     	; 0xe78 <vfprintf+0x2c0>
     e6a:	f2 fc       	sbrc	r15, 2
     e6c:	05 c0       	rjmp	.+10     	; 0xe78 <vfprintf+0x2c0>
     e6e:	8f ee       	ldi	r24, 0xEF	; 239
     e70:	f8 22       	and	r15, r24
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfprintf+0x2c0>
     e74:	1d 2d       	mov	r17, r13
     e76:	01 c0       	rjmp	.+2      	; 0xe7a <vfprintf+0x2c2>
     e78:	19 2d       	mov	r17, r9
     e7a:	f4 fe       	sbrs	r15, 4
     e7c:	0d c0       	rjmp	.+26     	; 0xe98 <vfprintf+0x2e0>
     e7e:	fe 01       	movw	r30, r28
     e80:	ed 0d       	add	r30, r13
     e82:	f1 1d       	adc	r31, r1
     e84:	80 81       	ld	r24, Z
     e86:	80 33       	cpi	r24, 0x30	; 48
     e88:	19 f4       	brne	.+6      	; 0xe90 <vfprintf+0x2d8>
     e8a:	99 ee       	ldi	r25, 0xE9	; 233
     e8c:	f9 22       	and	r15, r25
     e8e:	08 c0       	rjmp	.+16     	; 0xea0 <vfprintf+0x2e8>
     e90:	1f 5f       	subi	r17, 0xFF	; 255
     e92:	f2 fe       	sbrs	r15, 2
     e94:	05 c0       	rjmp	.+10     	; 0xea0 <vfprintf+0x2e8>
     e96:	03 c0       	rjmp	.+6      	; 0xe9e <vfprintf+0x2e6>
     e98:	8f 2d       	mov	r24, r15
     e9a:	86 78       	andi	r24, 0x86	; 134
     e9c:	09 f0       	breq	.+2      	; 0xea0 <vfprintf+0x2e8>
     e9e:	1f 5f       	subi	r17, 0xFF	; 255
     ea0:	0f 2d       	mov	r16, r15
     ea2:	f3 fc       	sbrc	r15, 3
     ea4:	13 c0       	rjmp	.+38     	; 0xecc <vfprintf+0x314>
     ea6:	f0 fe       	sbrs	r15, 0
     ea8:	0e c0       	rjmp	.+28     	; 0xec6 <vfprintf+0x30e>
     eaa:	1e 15       	cp	r17, r14
     eac:	10 f0       	brcs	.+4      	; 0xeb2 <vfprintf+0x2fa>
     eae:	9d 2c       	mov	r9, r13
     eb0:	0a c0       	rjmp	.+20     	; 0xec6 <vfprintf+0x30e>
     eb2:	9d 2c       	mov	r9, r13
     eb4:	9e 0c       	add	r9, r14
     eb6:	91 1a       	sub	r9, r17
     eb8:	1e 2d       	mov	r17, r14
     eba:	05 c0       	rjmp	.+10     	; 0xec6 <vfprintf+0x30e>
     ebc:	80 e2       	ldi	r24, 0x20	; 32
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	b3 01       	movw	r22, r6
     ec2:	95 d2       	rcall	.+1322   	; 0x13ee <fputc>
     ec4:	1f 5f       	subi	r17, 0xFF	; 255
     ec6:	1e 15       	cp	r17, r14
     ec8:	c8 f3       	brcs	.-14     	; 0xebc <vfprintf+0x304>
     eca:	04 c0       	rjmp	.+8      	; 0xed4 <vfprintf+0x31c>
     ecc:	1e 15       	cp	r17, r14
     ece:	10 f4       	brcc	.+4      	; 0xed4 <vfprintf+0x31c>
     ed0:	e1 1a       	sub	r14, r17
     ed2:	01 c0       	rjmp	.+2      	; 0xed6 <vfprintf+0x31e>
     ed4:	ee 24       	eor	r14, r14
     ed6:	04 ff       	sbrs	r16, 4
     ed8:	0e c0       	rjmp	.+28     	; 0xef6 <vfprintf+0x33e>
     eda:	80 e3       	ldi	r24, 0x30	; 48
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	b3 01       	movw	r22, r6
     ee0:	86 d2       	rcall	.+1292   	; 0x13ee <fputc>
     ee2:	02 ff       	sbrs	r16, 2
     ee4:	1b c0       	rjmp	.+54     	; 0xf1c <vfprintf+0x364>
     ee6:	01 fd       	sbrc	r16, 1
     ee8:	03 c0       	rjmp	.+6      	; 0xef0 <vfprintf+0x338>
     eea:	88 e7       	ldi	r24, 0x78	; 120
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e c0       	rjmp	.+28     	; 0xf0c <vfprintf+0x354>
     ef0:	88 e5       	ldi	r24, 0x58	; 88
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	0b c0       	rjmp	.+22     	; 0xf0c <vfprintf+0x354>
     ef6:	80 2f       	mov	r24, r16
     ef8:	86 78       	andi	r24, 0x86	; 134
     efa:	81 f0       	breq	.+32     	; 0xf1c <vfprintf+0x364>
     efc:	01 ff       	sbrs	r16, 1
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <vfprintf+0x34c>
     f00:	8b e2       	ldi	r24, 0x2B	; 43
     f02:	01 c0       	rjmp	.+2      	; 0xf06 <vfprintf+0x34e>
     f04:	80 e2       	ldi	r24, 0x20	; 32
     f06:	f7 fc       	sbrc	r15, 7
     f08:	8d e2       	ldi	r24, 0x2D	; 45
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	b3 01       	movw	r22, r6
     f0e:	6f d2       	rcall	.+1246   	; 0x13ee <fputc>
     f10:	05 c0       	rjmp	.+10     	; 0xf1c <vfprintf+0x364>
     f12:	80 e3       	ldi	r24, 0x30	; 48
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	b3 01       	movw	r22, r6
     f18:	6a d2       	rcall	.+1236   	; 0x13ee <fputc>
     f1a:	9a 94       	dec	r9
     f1c:	d9 14       	cp	r13, r9
     f1e:	c8 f3       	brcs	.-14     	; 0xf12 <vfprintf+0x35a>
     f20:	da 94       	dec	r13
     f22:	f1 01       	movw	r30, r2
     f24:	ed 0d       	add	r30, r13
     f26:	f1 1d       	adc	r31, r1
     f28:	80 81       	ld	r24, Z
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	b3 01       	movw	r22, r6
     f2e:	5f d2       	rcall	.+1214   	; 0x13ee <fputc>
     f30:	dd 20       	and	r13, r13
     f32:	b1 f7       	brne	.-20     	; 0xf20 <vfprintf+0x368>
     f34:	05 c0       	rjmp	.+10     	; 0xf40 <vfprintf+0x388>
     f36:	80 e2       	ldi	r24, 0x20	; 32
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	b3 01       	movw	r22, r6
     f3c:	58 d2       	rcall	.+1200   	; 0x13ee <fputc>
     f3e:	ea 94       	dec	r14
     f40:	ee 20       	and	r14, r14
     f42:	c9 f7       	brne	.-14     	; 0xf36 <vfprintf+0x37e>
     f44:	50 ce       	rjmp	.-864    	; 0xbe6 <vfprintf+0x2e>
     f46:	f3 01       	movw	r30, r6
     f48:	66 81       	ldd	r22, Z+6	; 0x06
     f4a:	77 81       	ldd	r23, Z+7	; 0x07
     f4c:	cb 01       	movw	r24, r22
     f4e:	2b 96       	adiw	r28, 0x0b	; 11
     f50:	e2 e1       	ldi	r30, 0x12	; 18
     f52:	f3 c2       	rjmp	.+1510   	; 0x153a <__epilogue_restores__>

00000f54 <dtoa_prf>:
     f54:	a9 e0       	ldi	r26, 0x09	; 9
     f56:	b0 e0       	ldi	r27, 0x00	; 0
     f58:	ef ea       	ldi	r30, 0xAF	; 175
     f5a:	f7 e0       	ldi	r31, 0x07	; 7
     f5c:	d6 c2       	rjmp	.+1452   	; 0x150a <__prologue_saves__+0x8>
     f5e:	6a 01       	movw	r12, r20
     f60:	12 2f       	mov	r17, r18
     f62:	a0 2e       	mov	r10, r16
     f64:	be 2c       	mov	r11, r14
     f66:	2b e3       	ldi	r18, 0x3B	; 59
     f68:	20 17       	cp	r18, r16
     f6a:	18 f4       	brcc	.+6      	; 0xf72 <dtoa_prf+0x1e>
     f6c:	2c e3       	ldi	r18, 0x3C	; 60
     f6e:	92 2e       	mov	r9, r18
     f70:	02 c0       	rjmp	.+4      	; 0xf76 <dtoa_prf+0x22>
     f72:	90 2e       	mov	r9, r16
     f74:	93 94       	inc	r9
     f76:	ae 01       	movw	r20, r28
     f78:	4f 5f       	subi	r20, 0xFF	; 255
     f7a:	5f 4f       	sbci	r21, 0xFF	; 255
     f7c:	27 e0       	ldi	r18, 0x07	; 7
     f7e:	09 2d       	mov	r16, r9
     f80:	48 d1       	rcall	.+656    	; 0x1212 <__ftoa_engine>
     f82:	bc 01       	movw	r22, r24
     f84:	89 81       	ldd	r24, Y+1	; 0x01
     f86:	e8 2e       	mov	r14, r24
     f88:	ff 24       	eor	r15, r15
     f8a:	c7 01       	movw	r24, r14
     f8c:	89 70       	andi	r24, 0x09	; 9
     f8e:	90 70       	andi	r25, 0x00	; 0
     f90:	01 97       	sbiw	r24, 0x01	; 1
     f92:	11 f4       	brne	.+4      	; 0xf98 <dtoa_prf+0x44>
     f94:	ad e2       	ldi	r26, 0x2D	; 45
     f96:	09 c0       	rjmp	.+18     	; 0xfaa <dtoa_prf+0x56>
     f98:	b1 fe       	sbrs	r11, 1
     f9a:	02 c0       	rjmp	.+4      	; 0xfa0 <dtoa_prf+0x4c>
     f9c:	ab e2       	ldi	r26, 0x2B	; 43
     f9e:	05 c0       	rjmp	.+10     	; 0xfaa <dtoa_prf+0x56>
     fa0:	b0 fc       	sbrc	r11, 0
     fa2:	02 c0       	rjmp	.+4      	; 0xfa8 <dtoa_prf+0x54>
     fa4:	a0 e0       	ldi	r26, 0x00	; 0
     fa6:	01 c0       	rjmp	.+2      	; 0xfaa <dtoa_prf+0x56>
     fa8:	a0 e2       	ldi	r26, 0x20	; 32
     faa:	e3 fe       	sbrs	r14, 3
     fac:	3b c0       	rjmp	.+118    	; 0x1024 <dtoa_prf+0xd0>
     fae:	aa 23       	and	r26, r26
     fb0:	11 f4       	brne	.+4      	; 0xfb6 <dtoa_prf+0x62>
     fb2:	23 e0       	ldi	r18, 0x03	; 3
     fb4:	01 c0       	rjmp	.+2      	; 0xfb8 <dtoa_prf+0x64>
     fb6:	24 e0       	ldi	r18, 0x04	; 4
     fb8:	21 17       	cp	r18, r17
     fba:	10 f0       	brcs	.+4      	; 0xfc0 <dtoa_prf+0x6c>
     fbc:	20 e0       	ldi	r18, 0x00	; 0
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <dtoa_prf+0x70>
     fc0:	12 1b       	sub	r17, r18
     fc2:	21 2f       	mov	r18, r17
     fc4:	eb 2c       	mov	r14, r11
     fc6:	b4 fe       	sbrs	r11, 4
     fc8:	02 c0       	rjmp	.+4      	; 0xfce <dtoa_prf+0x7a>
     fca:	32 2f       	mov	r19, r18
     fcc:	0a c0       	rjmp	.+20     	; 0xfe2 <dtoa_prf+0x8e>
     fce:	f6 01       	movw	r30, r12
     fd0:	32 2f       	mov	r19, r18
     fd2:	80 e2       	ldi	r24, 0x20	; 32
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <dtoa_prf+0x86>
     fd6:	81 93       	st	Z+, r24
     fd8:	31 50       	subi	r19, 0x01	; 1
     fda:	33 23       	and	r19, r19
     fdc:	e1 f7       	brne	.-8      	; 0xfd6 <dtoa_prf+0x82>
     fde:	c2 0e       	add	r12, r18
     fe0:	d1 1c       	adc	r13, r1
     fe2:	aa 23       	and	r26, r26
     fe4:	19 f0       	breq	.+6      	; 0xfec <dtoa_prf+0x98>
     fe6:	f6 01       	movw	r30, r12
     fe8:	a1 93       	st	Z+, r26
     fea:	6f 01       	movw	r12, r30
     fec:	f6 01       	movw	r30, r12
     fee:	31 96       	adiw	r30, 0x01	; 1
     ff0:	e2 fe       	sbrs	r14, 2
     ff2:	05 c0       	rjmp	.+10     	; 0xffe <dtoa_prf+0xaa>
     ff4:	9e e4       	ldi	r25, 0x4E	; 78
     ff6:	d6 01       	movw	r26, r12
     ff8:	9c 93       	st	X, r25
     ffa:	81 e4       	ldi	r24, 0x41	; 65
     ffc:	04 c0       	rjmp	.+8      	; 0x1006 <dtoa_prf+0xb2>
     ffe:	9e e6       	ldi	r25, 0x6E	; 110
    1000:	d6 01       	movw	r26, r12
    1002:	9c 93       	st	X, r25
    1004:	81 e6       	ldi	r24, 0x61	; 97
    1006:	11 96       	adiw	r26, 0x01	; 1
    1008:	8c 93       	st	X, r24
    100a:	91 83       	std	Z+1, r25	; 0x01
    100c:	32 96       	adiw	r30, 0x02	; 2
    100e:	df 01       	movw	r26, r30
    1010:	83 2f       	mov	r24, r19
    1012:	90 e2       	ldi	r25, 0x20	; 32
    1014:	02 c0       	rjmp	.+4      	; 0x101a <dtoa_prf+0xc6>
    1016:	9d 93       	st	X+, r25
    1018:	81 50       	subi	r24, 0x01	; 1
    101a:	88 23       	and	r24, r24
    101c:	e1 f7       	brne	.-8      	; 0x1016 <dtoa_prf+0xc2>
    101e:	e3 0f       	add	r30, r19
    1020:	f1 1d       	adc	r31, r1
    1022:	40 c0       	rjmp	.+128    	; 0x10a4 <dtoa_prf+0x150>
    1024:	e2 fe       	sbrs	r14, 2
    1026:	42 c0       	rjmp	.+132    	; 0x10ac <dtoa_prf+0x158>
    1028:	aa 23       	and	r26, r26
    102a:	11 f4       	brne	.+4      	; 0x1030 <dtoa_prf+0xdc>
    102c:	23 e0       	ldi	r18, 0x03	; 3
    102e:	01 c0       	rjmp	.+2      	; 0x1032 <dtoa_prf+0xde>
    1030:	24 e0       	ldi	r18, 0x04	; 4
    1032:	21 17       	cp	r18, r17
    1034:	10 f0       	brcs	.+4      	; 0x103a <dtoa_prf+0xe6>
    1036:	20 e0       	ldi	r18, 0x00	; 0
    1038:	02 c0       	rjmp	.+4      	; 0x103e <dtoa_prf+0xea>
    103a:	12 1b       	sub	r17, r18
    103c:	21 2f       	mov	r18, r17
    103e:	eb 2c       	mov	r14, r11
    1040:	b4 fe       	sbrs	r11, 4
    1042:	02 c0       	rjmp	.+4      	; 0x1048 <dtoa_prf+0xf4>
    1044:	92 2f       	mov	r25, r18
    1046:	0a c0       	rjmp	.+20     	; 0x105c <dtoa_prf+0x108>
    1048:	f6 01       	movw	r30, r12
    104a:	92 2f       	mov	r25, r18
    104c:	80 e2       	ldi	r24, 0x20	; 32
    104e:	02 c0       	rjmp	.+4      	; 0x1054 <dtoa_prf+0x100>
    1050:	81 93       	st	Z+, r24
    1052:	91 50       	subi	r25, 0x01	; 1
    1054:	99 23       	and	r25, r25
    1056:	e1 f7       	brne	.-8      	; 0x1050 <dtoa_prf+0xfc>
    1058:	c2 0e       	add	r12, r18
    105a:	d1 1c       	adc	r13, r1
    105c:	aa 23       	and	r26, r26
    105e:	19 f0       	breq	.+6      	; 0x1066 <dtoa_prf+0x112>
    1060:	f6 01       	movw	r30, r12
    1062:	a1 93       	st	Z+, r26
    1064:	6f 01       	movw	r12, r30
    1066:	f6 01       	movw	r30, r12
    1068:	31 96       	adiw	r30, 0x01	; 1
    106a:	e2 fe       	sbrs	r14, 2
    106c:	08 c0       	rjmp	.+16     	; 0x107e <dtoa_prf+0x12a>
    106e:	89 e4       	ldi	r24, 0x49	; 73
    1070:	d6 01       	movw	r26, r12
    1072:	8c 93       	st	X, r24
    1074:	8e e4       	ldi	r24, 0x4E	; 78
    1076:	11 96       	adiw	r26, 0x01	; 1
    1078:	8c 93       	st	X, r24
    107a:	86 e4       	ldi	r24, 0x46	; 70
    107c:	07 c0       	rjmp	.+14     	; 0x108c <dtoa_prf+0x138>
    107e:	89 e6       	ldi	r24, 0x69	; 105
    1080:	d6 01       	movw	r26, r12
    1082:	8c 93       	st	X, r24
    1084:	8e e6       	ldi	r24, 0x6E	; 110
    1086:	11 96       	adiw	r26, 0x01	; 1
    1088:	8c 93       	st	X, r24
    108a:	86 e6       	ldi	r24, 0x66	; 102
    108c:	81 83       	std	Z+1, r24	; 0x01
    108e:	32 96       	adiw	r30, 0x02	; 2
    1090:	df 01       	movw	r26, r30
    1092:	89 2f       	mov	r24, r25
    1094:	20 e2       	ldi	r18, 0x20	; 32
    1096:	02 c0       	rjmp	.+4      	; 0x109c <dtoa_prf+0x148>
    1098:	2d 93       	st	X+, r18
    109a:	81 50       	subi	r24, 0x01	; 1
    109c:	88 23       	and	r24, r24
    109e:	e1 f7       	brne	.-8      	; 0x1098 <dtoa_prf+0x144>
    10a0:	e9 0f       	add	r30, r25
    10a2:	f1 1d       	adc	r31, r1
    10a4:	10 82       	st	Z, r1
    10a6:	2e ef       	ldi	r18, 0xFE	; 254
    10a8:	3f ef       	ldi	r19, 0xFF	; 255
    10aa:	af c0       	rjmp	.+350    	; 0x120a <dtoa_prf+0x2b6>
    10ac:	16 16       	cp	r1, r22
    10ae:	17 06       	cpc	r1, r23
    10b0:	1c f0       	brlt	.+6      	; 0x10b8 <dtoa_prf+0x164>
    10b2:	41 e0       	ldi	r20, 0x01	; 1
    10b4:	50 e0       	ldi	r21, 0x00	; 0
    10b6:	03 c0       	rjmp	.+6      	; 0x10be <dtoa_prf+0x16a>
    10b8:	ab 01       	movw	r20, r22
    10ba:	4f 5f       	subi	r20, 0xFF	; 255
    10bc:	5f 4f       	sbci	r21, 0xFF	; 255
    10be:	aa 20       	and	r10, r10
    10c0:	19 f4       	brne	.+6      	; 0x10c8 <dtoa_prf+0x174>
    10c2:	80 e0       	ldi	r24, 0x00	; 0
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	03 c0       	rjmp	.+6      	; 0x10ce <dtoa_prf+0x17a>
    10c8:	8a 2d       	mov	r24, r10
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	01 96       	adiw	r24, 0x01	; 1
    10ce:	20 e0       	ldi	r18, 0x00	; 0
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	aa 23       	and	r26, r26
    10d4:	11 f0       	breq	.+4      	; 0x10da <dtoa_prf+0x186>
    10d6:	21 e0       	ldi	r18, 0x01	; 1
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	24 0f       	add	r18, r20
    10dc:	35 1f       	adc	r19, r21
    10de:	28 0f       	add	r18, r24
    10e0:	39 1f       	adc	r19, r25
    10e2:	81 2f       	mov	r24, r17
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	28 17       	cp	r18, r24
    10e8:	39 07       	cpc	r19, r25
    10ea:	14 f0       	brlt	.+4      	; 0x10f0 <dtoa_prf+0x19c>
    10ec:	20 e0       	ldi	r18, 0x00	; 0
    10ee:	02 c0       	rjmp	.+4      	; 0x10f4 <dtoa_prf+0x1a0>
    10f0:	12 1b       	sub	r17, r18
    10f2:	21 2f       	mov	r18, r17
    10f4:	4b 2d       	mov	r20, r11
    10f6:	50 e0       	ldi	r21, 0x00	; 0
    10f8:	ca 01       	movw	r24, r20
    10fa:	80 71       	andi	r24, 0x10	; 16
    10fc:	90 70       	andi	r25, 0x00	; 0
    10fe:	b4 fc       	sbrc	r11, 4
    1100:	0d c0       	rjmp	.+26     	; 0x111c <dtoa_prf+0x1c8>
    1102:	b3 fc       	sbrc	r11, 3
    1104:	0b c0       	rjmp	.+22     	; 0x111c <dtoa_prf+0x1c8>
    1106:	f6 01       	movw	r30, r12
    1108:	32 2f       	mov	r19, r18
    110a:	40 e2       	ldi	r20, 0x20	; 32
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <dtoa_prf+0x1be>
    110e:	41 93       	st	Z+, r20
    1110:	31 50       	subi	r19, 0x01	; 1
    1112:	33 23       	and	r19, r19
    1114:	e1 f7       	brne	.-8      	; 0x110e <dtoa_prf+0x1ba>
    1116:	c2 0e       	add	r12, r18
    1118:	d1 1c       	adc	r13, r1
    111a:	01 c0       	rjmp	.+2      	; 0x111e <dtoa_prf+0x1ca>
    111c:	32 2f       	mov	r19, r18
    111e:	aa 23       	and	r26, r26
    1120:	19 f0       	breq	.+6      	; 0x1128 <dtoa_prf+0x1d4>
    1122:	f6 01       	movw	r30, r12
    1124:	a1 93       	st	Z+, r26
    1126:	6f 01       	movw	r12, r30
    1128:	89 2b       	or	r24, r25
    112a:	11 f0       	breq	.+4      	; 0x1130 <dtoa_prf+0x1dc>
    112c:	13 2f       	mov	r17, r19
    112e:	0a c0       	rjmp	.+20     	; 0x1144 <dtoa_prf+0x1f0>
    1130:	f6 01       	movw	r30, r12
    1132:	13 2f       	mov	r17, r19
    1134:	80 e3       	ldi	r24, 0x30	; 48
    1136:	02 c0       	rjmp	.+4      	; 0x113c <dtoa_prf+0x1e8>
    1138:	81 93       	st	Z+, r24
    113a:	11 50       	subi	r17, 0x01	; 1
    113c:	11 23       	and	r17, r17
    113e:	e1 f7       	brne	.-8      	; 0x1138 <dtoa_prf+0x1e4>
    1140:	c3 0e       	add	r12, r19
    1142:	d1 1c       	adc	r13, r1
    1144:	09 2d       	mov	r16, r9
    1146:	06 0f       	add	r16, r22
    1148:	ba 80       	ldd	r11, Y+2	; 0x02
    114a:	90 e1       	ldi	r25, 0x10	; 16
    114c:	89 2e       	mov	r8, r25
    114e:	91 2c       	mov	r9, r1
    1150:	8e 20       	and	r8, r14
    1152:	9f 20       	and	r9, r15
    1154:	e4 fe       	sbrs	r14, 4
    1156:	04 c0       	rjmp	.+8      	; 0x1160 <dtoa_prf+0x20c>
    1158:	f1 e3       	ldi	r31, 0x31	; 49
    115a:	bf 16       	cp	r11, r31
    115c:	09 f4       	brne	.+2      	; 0x1160 <dtoa_prf+0x20c>
    115e:	01 50       	subi	r16, 0x01	; 1
    1160:	10 16       	cp	r1, r16
    1162:	14 f0       	brlt	.+4      	; 0x1168 <dtoa_prf+0x214>
    1164:	01 e0       	ldi	r16, 0x01	; 1
    1166:	03 c0       	rjmp	.+6      	; 0x116e <dtoa_prf+0x21a>
    1168:	09 30       	cpi	r16, 0x09	; 9
    116a:	08 f0       	brcs	.+2      	; 0x116e <dtoa_prf+0x21a>
    116c:	08 e0       	ldi	r16, 0x08	; 8
    116e:	9b 01       	movw	r18, r22
    1170:	77 ff       	sbrs	r23, 7
    1172:	02 c0       	rjmp	.+4      	; 0x1178 <dtoa_prf+0x224>
    1174:	20 e0       	ldi	r18, 0x00	; 0
    1176:	30 e0       	ldi	r19, 0x00	; 0
    1178:	cb 01       	movw	r24, r22
    117a:	01 96       	adiw	r24, 0x01	; 1
    117c:	82 1b       	sub	r24, r18
    117e:	93 0b       	sbc	r25, r19
    1180:	fe 01       	movw	r30, r28
    1182:	31 96       	adiw	r30, 0x01	; 1
    1184:	e8 0f       	add	r30, r24
    1186:	f9 1f       	adc	r31, r25
    1188:	8e e2       	ldi	r24, 0x2E	; 46
    118a:	f8 2e       	mov	r15, r24
    118c:	3b 01       	movw	r6, r22
    118e:	60 1a       	sub	r6, r16
    1190:	71 08       	sbc	r7, r1
    1192:	8a 2d       	mov	r24, r10
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	44 27       	eor	r20, r20
    1198:	55 27       	eor	r21, r21
    119a:	48 1b       	sub	r20, r24
    119c:	59 0b       	sbc	r21, r25
    119e:	8f ef       	ldi	r24, 0xFF	; 255
    11a0:	2f 3f       	cpi	r18, 0xFF	; 255
    11a2:	38 07       	cpc	r19, r24
    11a4:	19 f4       	brne	.+6      	; 0x11ac <dtoa_prf+0x258>
    11a6:	d6 01       	movw	r26, r12
    11a8:	fd 92       	st	X+, r15
    11aa:	6d 01       	movw	r12, r26
    11ac:	62 17       	cp	r22, r18
    11ae:	73 07       	cpc	r23, r19
    11b0:	2c f0       	brlt	.+10     	; 0x11bc <dtoa_prf+0x268>
    11b2:	62 16       	cp	r6, r18
    11b4:	73 06       	cpc	r7, r19
    11b6:	14 f4       	brge	.+4      	; 0x11bc <dtoa_prf+0x268>
    11b8:	80 81       	ld	r24, Z
    11ba:	01 c0       	rjmp	.+2      	; 0x11be <dtoa_prf+0x26a>
    11bc:	80 e3       	ldi	r24, 0x30	; 48
    11be:	21 50       	subi	r18, 0x01	; 1
    11c0:	30 40       	sbci	r19, 0x00	; 0
    11c2:	31 96       	adiw	r30, 0x01	; 1
    11c4:	24 17       	cp	r18, r20
    11c6:	35 07       	cpc	r19, r21
    11c8:	24 f0       	brlt	.+8      	; 0x11d2 <dtoa_prf+0x27e>
    11ca:	d6 01       	movw	r26, r12
    11cc:	8d 93       	st	X+, r24
    11ce:	6d 01       	movw	r12, r26
    11d0:	e6 cf       	rjmp	.-52     	; 0x119e <dtoa_prf+0x24a>
    11d2:	26 17       	cp	r18, r22
    11d4:	37 07       	cpc	r19, r23
    11d6:	49 f4       	brne	.+18     	; 0x11ea <dtoa_prf+0x296>
    11d8:	b5 e3       	ldi	r27, 0x35	; 53
    11da:	bb 15       	cp	r27, r11
    11dc:	28 f0       	brcs	.+10     	; 0x11e8 <dtoa_prf+0x294>
    11de:	bb 16       	cp	r11, r27
    11e0:	21 f4       	brne	.+8      	; 0x11ea <dtoa_prf+0x296>
    11e2:	81 14       	cp	r8, r1
    11e4:	91 04       	cpc	r9, r1
    11e6:	09 f4       	brne	.+2      	; 0x11ea <dtoa_prf+0x296>
    11e8:	81 e3       	ldi	r24, 0x31	; 49
    11ea:	f6 01       	movw	r30, r12
    11ec:	81 93       	st	Z+, r24
    11ee:	d6 01       	movw	r26, r12
    11f0:	81 2f       	mov	r24, r17
    11f2:	90 e2       	ldi	r25, 0x20	; 32
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <dtoa_prf+0x2a6>
    11f6:	9c 93       	st	X, r25
    11f8:	81 50       	subi	r24, 0x01	; 1
    11fa:	11 96       	adiw	r26, 0x01	; 1
    11fc:	88 23       	and	r24, r24
    11fe:	d9 f7       	brne	.-10     	; 0x11f6 <dtoa_prf+0x2a2>
    1200:	e1 0f       	add	r30, r17
    1202:	f1 1d       	adc	r31, r1
    1204:	10 82       	st	Z, r1
    1206:	20 e0       	ldi	r18, 0x00	; 0
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	c9 01       	movw	r24, r18
    120c:	29 96       	adiw	r28, 0x09	; 9
    120e:	ee e0       	ldi	r30, 0x0E	; 14
    1210:	98 c1       	rjmp	.+816    	; 0x1542 <__epilogue_restores__+0x8>

00001212 <__ftoa_engine>:
    1212:	28 30       	cpi	r18, 0x08	; 8
    1214:	08 f0       	brcs	.+2      	; 0x1218 <__ftoa_engine+0x6>
    1216:	27 e0       	ldi	r18, 0x07	; 7
    1218:	33 27       	eor	r19, r19
    121a:	da 01       	movw	r26, r20
    121c:	99 0f       	add	r25, r25
    121e:	31 1d       	adc	r19, r1
    1220:	87 fd       	sbrc	r24, 7
    1222:	91 60       	ori	r25, 0x01	; 1
    1224:	00 96       	adiw	r24, 0x00	; 0
    1226:	61 05       	cpc	r22, r1
    1228:	71 05       	cpc	r23, r1
    122a:	39 f4       	brne	.+14     	; 0x123a <__ftoa_engine+0x28>
    122c:	32 60       	ori	r19, 0x02	; 2
    122e:	2e 5f       	subi	r18, 0xFE	; 254
    1230:	3d 93       	st	X+, r19
    1232:	30 e3       	ldi	r19, 0x30	; 48
    1234:	2a 95       	dec	r18
    1236:	e1 f7       	brne	.-8      	; 0x1230 <__ftoa_engine+0x1e>
    1238:	08 95       	ret
    123a:	9f 3f       	cpi	r25, 0xFF	; 255
    123c:	30 f0       	brcs	.+12     	; 0x124a <__ftoa_engine+0x38>
    123e:	80 38       	cpi	r24, 0x80	; 128
    1240:	71 05       	cpc	r23, r1
    1242:	61 05       	cpc	r22, r1
    1244:	09 f0       	breq	.+2      	; 0x1248 <__ftoa_engine+0x36>
    1246:	3c 5f       	subi	r19, 0xFC	; 252
    1248:	3c 5f       	subi	r19, 0xFC	; 252
    124a:	3d 93       	st	X+, r19
    124c:	91 30       	cpi	r25, 0x01	; 1
    124e:	08 f0       	brcs	.+2      	; 0x1252 <__ftoa_engine+0x40>
    1250:	80 68       	ori	r24, 0x80	; 128
    1252:	91 1d       	adc	r25, r1
    1254:	df 93       	push	r29
    1256:	cf 93       	push	r28
    1258:	1f 93       	push	r17
    125a:	0f 93       	push	r16
    125c:	ff 92       	push	r15
    125e:	ef 92       	push	r14
    1260:	19 2f       	mov	r17, r25
    1262:	98 7f       	andi	r25, 0xF8	; 248
    1264:	96 95       	lsr	r25
    1266:	e9 2f       	mov	r30, r25
    1268:	96 95       	lsr	r25
    126a:	96 95       	lsr	r25
    126c:	e9 0f       	add	r30, r25
    126e:	ff 27       	eor	r31, r31
    1270:	e0 58       	subi	r30, 0x80	; 128
    1272:	ff 4f       	sbci	r31, 0xFF	; 255
    1274:	99 27       	eor	r25, r25
    1276:	33 27       	eor	r19, r19
    1278:	ee 24       	eor	r14, r14
    127a:	ff 24       	eor	r15, r15
    127c:	a7 01       	movw	r20, r14
    127e:	e7 01       	movw	r28, r14
    1280:	05 90       	lpm	r0, Z+
    1282:	08 94       	sec
    1284:	07 94       	ror	r0
    1286:	28 f4       	brcc	.+10     	; 0x1292 <__ftoa_engine+0x80>
    1288:	36 0f       	add	r19, r22
    128a:	e7 1e       	adc	r14, r23
    128c:	f8 1e       	adc	r15, r24
    128e:	49 1f       	adc	r20, r25
    1290:	51 1d       	adc	r21, r1
    1292:	66 0f       	add	r22, r22
    1294:	77 1f       	adc	r23, r23
    1296:	88 1f       	adc	r24, r24
    1298:	99 1f       	adc	r25, r25
    129a:	06 94       	lsr	r0
    129c:	a1 f7       	brne	.-24     	; 0x1286 <__ftoa_engine+0x74>
    129e:	05 90       	lpm	r0, Z+
    12a0:	07 94       	ror	r0
    12a2:	28 f4       	brcc	.+10     	; 0x12ae <__ftoa_engine+0x9c>
    12a4:	e7 0e       	add	r14, r23
    12a6:	f8 1e       	adc	r15, r24
    12a8:	49 1f       	adc	r20, r25
    12aa:	56 1f       	adc	r21, r22
    12ac:	c1 1d       	adc	r28, r1
    12ae:	77 0f       	add	r23, r23
    12b0:	88 1f       	adc	r24, r24
    12b2:	99 1f       	adc	r25, r25
    12b4:	66 1f       	adc	r22, r22
    12b6:	06 94       	lsr	r0
    12b8:	a1 f7       	brne	.-24     	; 0x12a2 <__ftoa_engine+0x90>
    12ba:	05 90       	lpm	r0, Z+
    12bc:	07 94       	ror	r0
    12be:	28 f4       	brcc	.+10     	; 0x12ca <__ftoa_engine+0xb8>
    12c0:	f8 0e       	add	r15, r24
    12c2:	49 1f       	adc	r20, r25
    12c4:	56 1f       	adc	r21, r22
    12c6:	c7 1f       	adc	r28, r23
    12c8:	d1 1d       	adc	r29, r1
    12ca:	88 0f       	add	r24, r24
    12cc:	99 1f       	adc	r25, r25
    12ce:	66 1f       	adc	r22, r22
    12d0:	77 1f       	adc	r23, r23
    12d2:	06 94       	lsr	r0
    12d4:	a1 f7       	brne	.-24     	; 0x12be <__ftoa_engine+0xac>
    12d6:	05 90       	lpm	r0, Z+
    12d8:	07 94       	ror	r0
    12da:	20 f4       	brcc	.+8      	; 0x12e4 <__ftoa_engine+0xd2>
    12dc:	49 0f       	add	r20, r25
    12de:	56 1f       	adc	r21, r22
    12e0:	c7 1f       	adc	r28, r23
    12e2:	d8 1f       	adc	r29, r24
    12e4:	99 0f       	add	r25, r25
    12e6:	66 1f       	adc	r22, r22
    12e8:	77 1f       	adc	r23, r23
    12ea:	88 1f       	adc	r24, r24
    12ec:	06 94       	lsr	r0
    12ee:	a9 f7       	brne	.-22     	; 0x12da <__ftoa_engine+0xc8>
    12f0:	84 91       	lpm	r24, Z+
    12f2:	10 95       	com	r17
    12f4:	17 70       	andi	r17, 0x07	; 7
    12f6:	41 f0       	breq	.+16     	; 0x1308 <__ftoa_engine+0xf6>
    12f8:	d6 95       	lsr	r29
    12fa:	c7 95       	ror	r28
    12fc:	57 95       	ror	r21
    12fe:	47 95       	ror	r20
    1300:	f7 94       	ror	r15
    1302:	e7 94       	ror	r14
    1304:	1a 95       	dec	r17
    1306:	c1 f7       	brne	.-16     	; 0x12f8 <__ftoa_engine+0xe6>
    1308:	e6 e2       	ldi	r30, 0x26	; 38
    130a:	f0 e0       	ldi	r31, 0x00	; 0
    130c:	68 94       	set
    130e:	15 90       	lpm	r1, Z+
    1310:	15 91       	lpm	r17, Z+
    1312:	35 91       	lpm	r19, Z+
    1314:	65 91       	lpm	r22, Z+
    1316:	95 91       	lpm	r25, Z+
    1318:	05 90       	lpm	r0, Z+
    131a:	7f e2       	ldi	r23, 0x2F	; 47
    131c:	73 95       	inc	r23
    131e:	e1 18       	sub	r14, r1
    1320:	f1 0a       	sbc	r15, r17
    1322:	43 0b       	sbc	r20, r19
    1324:	56 0b       	sbc	r21, r22
    1326:	c9 0b       	sbc	r28, r25
    1328:	d0 09       	sbc	r29, r0
    132a:	c0 f7       	brcc	.-16     	; 0x131c <__ftoa_engine+0x10a>
    132c:	e1 0c       	add	r14, r1
    132e:	f1 1e       	adc	r15, r17
    1330:	43 1f       	adc	r20, r19
    1332:	56 1f       	adc	r21, r22
    1334:	c9 1f       	adc	r28, r25
    1336:	d0 1d       	adc	r29, r0
    1338:	7e f4       	brtc	.+30     	; 0x1358 <__ftoa_engine+0x146>
    133a:	70 33       	cpi	r23, 0x30	; 48
    133c:	11 f4       	brne	.+4      	; 0x1342 <__ftoa_engine+0x130>
    133e:	8a 95       	dec	r24
    1340:	e6 cf       	rjmp	.-52     	; 0x130e <__ftoa_engine+0xfc>
    1342:	e8 94       	clt
    1344:	01 50       	subi	r16, 0x01	; 1
    1346:	30 f0       	brcs	.+12     	; 0x1354 <__ftoa_engine+0x142>
    1348:	08 0f       	add	r16, r24
    134a:	0a f4       	brpl	.+2      	; 0x134e <__ftoa_engine+0x13c>
    134c:	00 27       	eor	r16, r16
    134e:	02 17       	cp	r16, r18
    1350:	08 f4       	brcc	.+2      	; 0x1354 <__ftoa_engine+0x142>
    1352:	20 2f       	mov	r18, r16
    1354:	23 95       	inc	r18
    1356:	02 2f       	mov	r16, r18
    1358:	7a 33       	cpi	r23, 0x3A	; 58
    135a:	28 f0       	brcs	.+10     	; 0x1366 <__ftoa_engine+0x154>
    135c:	79 e3       	ldi	r23, 0x39	; 57
    135e:	7d 93       	st	X+, r23
    1360:	2a 95       	dec	r18
    1362:	e9 f7       	brne	.-6      	; 0x135e <__ftoa_engine+0x14c>
    1364:	10 c0       	rjmp	.+32     	; 0x1386 <__ftoa_engine+0x174>
    1366:	7d 93       	st	X+, r23
    1368:	2a 95       	dec	r18
    136a:	89 f6       	brne	.-94     	; 0x130e <__ftoa_engine+0xfc>
    136c:	06 94       	lsr	r0
    136e:	97 95       	ror	r25
    1370:	67 95       	ror	r22
    1372:	37 95       	ror	r19
    1374:	17 95       	ror	r17
    1376:	17 94       	ror	r1
    1378:	e1 18       	sub	r14, r1
    137a:	f1 0a       	sbc	r15, r17
    137c:	43 0b       	sbc	r20, r19
    137e:	56 0b       	sbc	r21, r22
    1380:	c9 0b       	sbc	r28, r25
    1382:	d0 09       	sbc	r29, r0
    1384:	98 f0       	brcs	.+38     	; 0x13ac <__ftoa_engine+0x19a>
    1386:	23 95       	inc	r18
    1388:	7e 91       	ld	r23, -X
    138a:	73 95       	inc	r23
    138c:	7a 33       	cpi	r23, 0x3A	; 58
    138e:	08 f0       	brcs	.+2      	; 0x1392 <__ftoa_engine+0x180>
    1390:	70 e3       	ldi	r23, 0x30	; 48
    1392:	7c 93       	st	X, r23
    1394:	20 13       	cpse	r18, r16
    1396:	b8 f7       	brcc	.-18     	; 0x1386 <__ftoa_engine+0x174>
    1398:	7e 91       	ld	r23, -X
    139a:	70 61       	ori	r23, 0x10	; 16
    139c:	7d 93       	st	X+, r23
    139e:	30 f0       	brcs	.+12     	; 0x13ac <__ftoa_engine+0x19a>
    13a0:	83 95       	inc	r24
    13a2:	71 e3       	ldi	r23, 0x31	; 49
    13a4:	7d 93       	st	X+, r23
    13a6:	70 e3       	ldi	r23, 0x30	; 48
    13a8:	2a 95       	dec	r18
    13aa:	e1 f7       	brne	.-8      	; 0x13a4 <__ftoa_engine+0x192>
    13ac:	11 24       	eor	r1, r1
    13ae:	ef 90       	pop	r14
    13b0:	ff 90       	pop	r15
    13b2:	0f 91       	pop	r16
    13b4:	1f 91       	pop	r17
    13b6:	cf 91       	pop	r28
    13b8:	df 91       	pop	r29
    13ba:	99 27       	eor	r25, r25
    13bc:	87 fd       	sbrc	r24, 7
    13be:	90 95       	com	r25
    13c0:	08 95       	ret

000013c2 <strnlen_P>:
    13c2:	fc 01       	movw	r30, r24
    13c4:	05 90       	lpm	r0, Z+
    13c6:	61 50       	subi	r22, 0x01	; 1
    13c8:	70 40       	sbci	r23, 0x00	; 0
    13ca:	01 10       	cpse	r0, r1
    13cc:	d8 f7       	brcc	.-10     	; 0x13c4 <strnlen_P+0x2>
    13ce:	80 95       	com	r24
    13d0:	90 95       	com	r25
    13d2:	8e 0f       	add	r24, r30
    13d4:	9f 1f       	adc	r25, r31
    13d6:	08 95       	ret

000013d8 <strnlen>:
    13d8:	fc 01       	movw	r30, r24
    13da:	61 50       	subi	r22, 0x01	; 1
    13dc:	70 40       	sbci	r23, 0x00	; 0
    13de:	01 90       	ld	r0, Z+
    13e0:	01 10       	cpse	r0, r1
    13e2:	d8 f7       	brcc	.-10     	; 0x13da <strnlen+0x2>
    13e4:	80 95       	com	r24
    13e6:	90 95       	com	r25
    13e8:	8e 0f       	add	r24, r30
    13ea:	9f 1f       	adc	r25, r31
    13ec:	08 95       	ret

000013ee <fputc>:
    13ee:	0f 93       	push	r16
    13f0:	1f 93       	push	r17
    13f2:	cf 93       	push	r28
    13f4:	df 93       	push	r29
    13f6:	8c 01       	movw	r16, r24
    13f8:	eb 01       	movw	r28, r22
    13fa:	8b 81       	ldd	r24, Y+3	; 0x03
    13fc:	81 ff       	sbrs	r24, 1
    13fe:	1b c0       	rjmp	.+54     	; 0x1436 <fputc+0x48>
    1400:	82 ff       	sbrs	r24, 2
    1402:	0d c0       	rjmp	.+26     	; 0x141e <fputc+0x30>
    1404:	2e 81       	ldd	r18, Y+6	; 0x06
    1406:	3f 81       	ldd	r19, Y+7	; 0x07
    1408:	8c 81       	ldd	r24, Y+4	; 0x04
    140a:	9d 81       	ldd	r25, Y+5	; 0x05
    140c:	28 17       	cp	r18, r24
    140e:	39 07       	cpc	r19, r25
    1410:	64 f4       	brge	.+24     	; 0x142a <fputc+0x3c>
    1412:	e8 81       	ld	r30, Y
    1414:	f9 81       	ldd	r31, Y+1	; 0x01
    1416:	01 93       	st	Z+, r16
    1418:	f9 83       	std	Y+1, r31	; 0x01
    141a:	e8 83       	st	Y, r30
    141c:	06 c0       	rjmp	.+12     	; 0x142a <fputc+0x3c>
    141e:	e8 85       	ldd	r30, Y+8	; 0x08
    1420:	f9 85       	ldd	r31, Y+9	; 0x09
    1422:	80 2f       	mov	r24, r16
    1424:	09 95       	icall
    1426:	89 2b       	or	r24, r25
    1428:	31 f4       	brne	.+12     	; 0x1436 <fputc+0x48>
    142a:	8e 81       	ldd	r24, Y+6	; 0x06
    142c:	9f 81       	ldd	r25, Y+7	; 0x07
    142e:	01 96       	adiw	r24, 0x01	; 1
    1430:	9f 83       	std	Y+7, r25	; 0x07
    1432:	8e 83       	std	Y+6, r24	; 0x06
    1434:	02 c0       	rjmp	.+4      	; 0x143a <fputc+0x4c>
    1436:	0f ef       	ldi	r16, 0xFF	; 255
    1438:	1f ef       	ldi	r17, 0xFF	; 255
    143a:	c8 01       	movw	r24, r16
    143c:	df 91       	pop	r29
    143e:	cf 91       	pop	r28
    1440:	1f 91       	pop	r17
    1442:	0f 91       	pop	r16
    1444:	08 95       	ret

00001446 <__ultoa_invert>:
    1446:	fa 01       	movw	r30, r20
    1448:	aa 27       	eor	r26, r26
    144a:	28 30       	cpi	r18, 0x08	; 8
    144c:	51 f1       	breq	.+84     	; 0x14a2 <__ultoa_invert+0x5c>
    144e:	20 31       	cpi	r18, 0x10	; 16
    1450:	81 f1       	breq	.+96     	; 0x14b2 <__ultoa_invert+0x6c>
    1452:	e8 94       	clt
    1454:	6f 93       	push	r22
    1456:	6e 7f       	andi	r22, 0xFE	; 254
    1458:	6e 5f       	subi	r22, 0xFE	; 254
    145a:	7f 4f       	sbci	r23, 0xFF	; 255
    145c:	8f 4f       	sbci	r24, 0xFF	; 255
    145e:	9f 4f       	sbci	r25, 0xFF	; 255
    1460:	af 4f       	sbci	r26, 0xFF	; 255
    1462:	b1 e0       	ldi	r27, 0x01	; 1
    1464:	3e d0       	rcall	.+124    	; 0x14e2 <__ultoa_invert+0x9c>
    1466:	b4 e0       	ldi	r27, 0x04	; 4
    1468:	3c d0       	rcall	.+120    	; 0x14e2 <__ultoa_invert+0x9c>
    146a:	67 0f       	add	r22, r23
    146c:	78 1f       	adc	r23, r24
    146e:	89 1f       	adc	r24, r25
    1470:	9a 1f       	adc	r25, r26
    1472:	a1 1d       	adc	r26, r1
    1474:	68 0f       	add	r22, r24
    1476:	79 1f       	adc	r23, r25
    1478:	8a 1f       	adc	r24, r26
    147a:	91 1d       	adc	r25, r1
    147c:	a1 1d       	adc	r26, r1
    147e:	6a 0f       	add	r22, r26
    1480:	71 1d       	adc	r23, r1
    1482:	81 1d       	adc	r24, r1
    1484:	91 1d       	adc	r25, r1
    1486:	a1 1d       	adc	r26, r1
    1488:	20 d0       	rcall	.+64     	; 0x14ca <__ultoa_invert+0x84>
    148a:	09 f4       	brne	.+2      	; 0x148e <__ultoa_invert+0x48>
    148c:	68 94       	set
    148e:	3f 91       	pop	r19
    1490:	2a e0       	ldi	r18, 0x0A	; 10
    1492:	26 9f       	mul	r18, r22
    1494:	11 24       	eor	r1, r1
    1496:	30 19       	sub	r19, r0
    1498:	30 5d       	subi	r19, 0xD0	; 208
    149a:	31 93       	st	Z+, r19
    149c:	de f6       	brtc	.-74     	; 0x1454 <__ultoa_invert+0xe>
    149e:	cf 01       	movw	r24, r30
    14a0:	08 95       	ret
    14a2:	46 2f       	mov	r20, r22
    14a4:	47 70       	andi	r20, 0x07	; 7
    14a6:	40 5d       	subi	r20, 0xD0	; 208
    14a8:	41 93       	st	Z+, r20
    14aa:	b3 e0       	ldi	r27, 0x03	; 3
    14ac:	0f d0       	rcall	.+30     	; 0x14cc <__ultoa_invert+0x86>
    14ae:	c9 f7       	brne	.-14     	; 0x14a2 <__ultoa_invert+0x5c>
    14b0:	f6 cf       	rjmp	.-20     	; 0x149e <__ultoa_invert+0x58>
    14b2:	46 2f       	mov	r20, r22
    14b4:	4f 70       	andi	r20, 0x0F	; 15
    14b6:	40 5d       	subi	r20, 0xD0	; 208
    14b8:	4a 33       	cpi	r20, 0x3A	; 58
    14ba:	18 f0       	brcs	.+6      	; 0x14c2 <__ultoa_invert+0x7c>
    14bc:	49 5d       	subi	r20, 0xD9	; 217
    14be:	31 fd       	sbrc	r19, 1
    14c0:	40 52       	subi	r20, 0x20	; 32
    14c2:	41 93       	st	Z+, r20
    14c4:	02 d0       	rcall	.+4      	; 0x14ca <__ultoa_invert+0x84>
    14c6:	a9 f7       	brne	.-22     	; 0x14b2 <__ultoa_invert+0x6c>
    14c8:	ea cf       	rjmp	.-44     	; 0x149e <__ultoa_invert+0x58>
    14ca:	b4 e0       	ldi	r27, 0x04	; 4
    14cc:	a6 95       	lsr	r26
    14ce:	97 95       	ror	r25
    14d0:	87 95       	ror	r24
    14d2:	77 95       	ror	r23
    14d4:	67 95       	ror	r22
    14d6:	ba 95       	dec	r27
    14d8:	c9 f7       	brne	.-14     	; 0x14cc <__ultoa_invert+0x86>
    14da:	00 97       	sbiw	r24, 0x00	; 0
    14dc:	61 05       	cpc	r22, r1
    14de:	71 05       	cpc	r23, r1
    14e0:	08 95       	ret
    14e2:	9b 01       	movw	r18, r22
    14e4:	ac 01       	movw	r20, r24
    14e6:	0a 2e       	mov	r0, r26
    14e8:	06 94       	lsr	r0
    14ea:	57 95       	ror	r21
    14ec:	47 95       	ror	r20
    14ee:	37 95       	ror	r19
    14f0:	27 95       	ror	r18
    14f2:	ba 95       	dec	r27
    14f4:	c9 f7       	brne	.-14     	; 0x14e8 <__ultoa_invert+0xa2>
    14f6:	62 0f       	add	r22, r18
    14f8:	73 1f       	adc	r23, r19
    14fa:	84 1f       	adc	r24, r20
    14fc:	95 1f       	adc	r25, r21
    14fe:	a0 1d       	adc	r26, r0
    1500:	08 95       	ret

00001502 <__prologue_saves__>:
    1502:	2f 92       	push	r2
    1504:	3f 92       	push	r3
    1506:	4f 92       	push	r4
    1508:	5f 92       	push	r5
    150a:	6f 92       	push	r6
    150c:	7f 92       	push	r7
    150e:	8f 92       	push	r8
    1510:	9f 92       	push	r9
    1512:	af 92       	push	r10
    1514:	bf 92       	push	r11
    1516:	cf 92       	push	r12
    1518:	df 92       	push	r13
    151a:	ef 92       	push	r14
    151c:	ff 92       	push	r15
    151e:	0f 93       	push	r16
    1520:	1f 93       	push	r17
    1522:	cf 93       	push	r28
    1524:	df 93       	push	r29
    1526:	cd b7       	in	r28, 0x3d	; 61
    1528:	de b7       	in	r29, 0x3e	; 62
    152a:	ca 1b       	sub	r28, r26
    152c:	db 0b       	sbc	r29, r27
    152e:	0f b6       	in	r0, 0x3f	; 63
    1530:	f8 94       	cli
    1532:	de bf       	out	0x3e, r29	; 62
    1534:	0f be       	out	0x3f, r0	; 63
    1536:	cd bf       	out	0x3d, r28	; 61
    1538:	09 94       	ijmp

0000153a <__epilogue_restores__>:
    153a:	2a 88       	ldd	r2, Y+18	; 0x12
    153c:	39 88       	ldd	r3, Y+17	; 0x11
    153e:	48 88       	ldd	r4, Y+16	; 0x10
    1540:	5f 84       	ldd	r5, Y+15	; 0x0f
    1542:	6e 84       	ldd	r6, Y+14	; 0x0e
    1544:	7d 84       	ldd	r7, Y+13	; 0x0d
    1546:	8c 84       	ldd	r8, Y+12	; 0x0c
    1548:	9b 84       	ldd	r9, Y+11	; 0x0b
    154a:	aa 84       	ldd	r10, Y+10	; 0x0a
    154c:	b9 84       	ldd	r11, Y+9	; 0x09
    154e:	c8 84       	ldd	r12, Y+8	; 0x08
    1550:	df 80       	ldd	r13, Y+7	; 0x07
    1552:	ee 80       	ldd	r14, Y+6	; 0x06
    1554:	fd 80       	ldd	r15, Y+5	; 0x05
    1556:	0c 81       	ldd	r16, Y+4	; 0x04
    1558:	1b 81       	ldd	r17, Y+3	; 0x03
    155a:	aa 81       	ldd	r26, Y+2	; 0x02
    155c:	b9 81       	ldd	r27, Y+1	; 0x01
    155e:	ce 0f       	add	r28, r30
    1560:	d1 1d       	adc	r29, r1
    1562:	0f b6       	in	r0, 0x3f	; 63
    1564:	f8 94       	cli
    1566:	de bf       	out	0x3e, r29	; 62
    1568:	0f be       	out	0x3f, r0	; 63
    156a:	cd bf       	out	0x3d, r28	; 61
    156c:	ed 01       	movw	r28, r26
    156e:	08 95       	ret

00001570 <_exit>:
    1570:	f8 94       	cli

00001572 <__stop_program>:
    1572:	ff cf       	rjmp	.-2      	; 0x1572 <__stop_program>
